{"version":3,"sources":["data sync /^/.//.*$","components/Header/Header.jsx","cleaners/numbers.js","cleaners/colors.js","components/Utilities/Thumbnail.jsx","components/Mixpanel/index.jsx","components/PostInsights/Table.jsx","components/Utilities/TextSnippets.jsx","components/PostInsights/PostStatistics.jsx","components/Filters/withFilter.jsx","cleaners/time.js","cleaners/stats.js","components/PostInsights/withPostInsight.jsx","cleaners/orientation.js","components/Utilities/InsightsContainer.jsx","components/Filters/Filters.jsx","components/PostInsights/index.jsx","components/GraphWrapper/GraphWrapper.jsx","cleaners/perPost.js","components/Graphs/Line/Line.jsx","components/PostTrends/index.jsx","components/PostTrends/withPostTrend.jsx","components/Graphs/BarSingle/BarSingle.jsx","components/Graphs/BarStacked/BarStacked.jsx","components/Graphs/BarGrouped/BarGrouped.jsx","components/Graphs/Pie/Pie.jsx","cleaners/init.js","cleaners/compare.js","components/ProfileTrends/index.jsx","components/ProfileTrends/withProfileTrends.jsx","cleaners/voice.js","components/ProfileInsights/withProfileInsights.jsx","components/ProfileInsights/Table.jsx","components/ProfileInsights/ProfileStatistics.jsx","components/ProfileInsights/index.jsx","components/Utilities/404.jsx","components/Presentation/Presentation.jsx","components/Home/Home.jsx","components/Nav/Nav.jsx","components/App/App.jsx","components/withTracker/index.jsx","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","TabPane","Tabs","tabMap","1","2","3","4","idxMap","profileInsight","postInsight","postTrend","profileTrend","withRouter","props","title","onTabToggle","tabLabel","useState","tabIdx","setTabIdx","useEffect","extra","key","type","disabled","footer","activeKey","onChange","tab","getNum","dunno","parseFloat","insertCommas","n","numRemain","includeSymbol","amount","toFixed","toString","replace","toPercent","float","num","numGen","Math","floor","random","colorMap","Thumbnail","imgUrl","shortcode","href","target","rel","style","display","lineHeight","src","alt","height","onError","onerror","mixpanel","init","Mixpanel","track","name","getDistinctId","get_distinct_id","LabelKey","color","text","marginLeft","posts","topHashTags","topMentions","profile","location","data","setData","order","columnKey","sortedInfo","setSortedInfo","generateTag","tag","idx","link","Date","now","views","some","post","viewCount","dataIndex","sortOrder","elipsis","render","val","duration","videoDuration","columns","url","sorter","className","width","fixed","a","b","engagement","numLikes","numComments","tags","length","dataSource","pagination","filters","column","sorted","sort","pageName","pathname","split","scroll","x","Text","Typography","RenderList","list","fallback","symbol","strong","WorstRoast","Paragraph","handleNaN","num1","num2","isNaN","round","PostStatistics","topStats","bottomStats","typeOfMedia","side","useVideo","useLongerComments","avgCommentLength","hashTagNumber","avgHashtags","plural","day","time","orientationTop","durationTop","mentionTop","hashTop","withFilter","Component","raw","mixpanelInfo","groupName","mpLabel","isError","setIsError","sport","region","isVerified","isBusinessAccount","stringFilters","setStringFilters","sortFilter","setSortFilter","trimFilter","setTrimFilter","checkboxInit","reduce","acc","curr","checkboxOptions","page","value","checkboxFilters","setCheckboxFilter","updateState","newState","filter","athlete","every","includes","slice","handleSortFilter","handleTrimFilter","newAmount","undefined","assign","handleStringFilter","trimState","handleCheckboxFilter","resetAllFilters","getDayOfWeekString","numDay","dayOfWeek","addZero","i","getTimeOfDay","fromUnix","d","h","getHours","m","getMinutes","getHour","parseInt","getDayOfWeekNum","getDay","getAvg","array","getTop","numToReturn","arr","flattenArray","forEach","push","addInsights","timestamp","isVideo","timeOfDay","comment","commentTextLength","numMentions","commentTags","numHashtags","hashTags","numTags","profileTags","orientation","dimensions","getConclusions","timestamps","onlyIsVideos","onlyCommentLengths","onlyMentions","onlyHashtags","onlyOrientation","onlyViews","onlyDuration","getSingleArrays","times","days","avgMentions","avgViews","flatHash","flatMention","videoTop","timeTop","dayTop","withPostInsight","perPostData","middle","ceil","topArray","topConclusions","topPosts","bottomArray","reverse","bottomConclusions","bottomPosts","InsightsContainer","children","Title","textAlign","marginBottom","paddingTop","paddingBottom","level","Option","Select","FilterContainer","subTitle","FilterWrapper","SortGroup","isDisabled","defaultValue","options","handleFilter","opt","SortCheckbox","menu","Item","checked","overlay","trigger","yesNoNoneOptions","sortOptions","SportAndRegionFilters","sportOptions","regionOptions","showSport","showRegion","StringFilters","HorizontalWrapper","FilterBtnContainer","isFilterOpen","setIsFilterOpen","onClick","CSSTransition","timeout","classNames","compose","dateLabels","history","match","names","profileLabel","setKey","path","exact","to","padding","Table","Page","showFilter","lineConfig","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","dataPerPost","thumbnails","thumbnail","likes","comments","getPerPost","flatData","profileWithMostPosts","perPost","config","label","borderColor","rgbHover","pointBackgroundColor","rgbSolid","pointHoverBackgroundColor","pointHoverBorderColor","backgroundColor","perDateData","likeTime","likePost","commentTime","commentPost","engagementTime","engagementPost","postLabels","Node","tooltip","setShowTooltip","labelDisplay","left","usePercent","onMouseLeave","borderRadius","position","top","background","RenderLine","labels","scalesConfig","showTooltip","setTooltip","bigD","datasets","chartRef","useRef","isDesktop","window","innerWidth","maintainAspectRatio","scales","tooltips","enabled","custom","chart","current","opacity","chartInstance","canvas","getBoundingClientRect","dataPoint","dataPoints","body","lines","meta","datasetIndex","index","pageYOffset","caretY","pageXOffset","caretX","xAlign","ref","numOfDays","numOfPosts","timeOrNumPosts","setTimeOrNumPosts","noTimeScalesConfig","yAxes","ticks","beginAtZero","timeScalesConfig","xAxes","maxTicksLimit","Group","buttonStyle","Button","GraphWrapper","RenderBar","solids","hovers","hoverBackgroundColor","hoverBorderColor","borderWidth","callbacks","BarStacked","rgb","stacked","BarGrouped","RenderPie","getFlatDataOneKey","thing","toLowerCase","join","compareTwo","key1","key2","label1","label2","profiles","followers","avgEngagement","avgEngag","pricePerPost","avgViewsPerVideo","commentBrandMentions","totalPhotosVsVideos","avgLikes","avgComments","shareOfVoice","total","totalLikes","totalComments","percent","getShareOfVoice","areThereSomeBrandMentions","Pie","BarSingle","getRank","rank","usePicture","picUrl","user","username","cadence","postButton","insta","totalPosts","totalPostCount","scrollTo","bestDay","bestTime","avgLikePerPost","avgCommentPerPost","valuePerPost","photoRank","videoRank","overallRank","group","DontRepeat","ending","noRepeats","Set","MostPopular","BestDayAndTime","Cadence","best","worst","Engagement","ProfileStatistics","ranks","samePhotoAndVideoScore","bestPhotoScore","bestVideoScore","diffPhotoAndVideoScore","dayOnly","timeOnly","worstOverallScore","bestCadence","worstCadence","bestOverallScore","mostFollowers","bestOverallEngagement","worstOverallEngagement","worstPhotoScore","worstVideoScore","photoMap","videoMap","totalVoice","getTotal","dataWithRanks","photoEngage","bestPhotoEngagement","worstPhotoEngagement","videoEngage","bestVideoEngagement","worstVideoEngagement","setUsePicture","paddingLeft","fontSize","ForOhFor","pageInfo","file","require","Header","component","FourOhFour","Content","Layout","paraStyle","maxWidth","ContactUs","ContactUsLink","ContactUsHover","Home","flexDirection","justifyContent","alignItems","minHeight","Nav","navOptions","mode","skiBoardOptions","boards","boarders","influencers","media","resorts","skis","softgoods","skiers","brandArray","AppRouter","brand","ReactGA","initialize","ReactDOM","basename","WrappedComponent","trackPage","set","pageview","ProdHOC","withTracker","App","document","getElementById"],"mappings":"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","file":"static/js/main.9994cbe9.chunk.js","sourcesContent":["var map = {\n\t\"./boarders\": 180,\n\t\"./boarders.json\": 180,\n\t\"./boards\": 181,\n\t\"./boards.json\": 181,\n\t\"./influencers\": 182,\n\t\"./influencers.json\": 182,\n\t\"./media\": 183,\n\t\"./media.json\": 183,\n\t\"./resorts\": 184,\n\t\"./resorts.json\": 184,\n\t\"./skiers\": 185,\n\t\"./skiers.json\": 185,\n\t\"./skis\": 186,\n\t\"./skis.json\": 186,\n\t\"./softgoods\": 187,\n\t\"./softgoods.json\": 187\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 392;","import React, { useState, useEffect, Fragment } from \"react\";\nimport { PageHeader, Button, Tabs } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nconst { TabPane } = Tabs;\n\nconst tabMap = {\n  1: \"profileInsight\",\n  2: \"postInsight\",\n  3: \"postTrend\",\n  4: \"profileTrend\",\n};\n\nconst idxMap = {\n  profileInsight: \"1\",\n  postInsight: \"2\",\n  postTrend: \"3\",\n  profileTrend: \"4\",\n};\n\nconst RenderPageHeader = (props) => {\n  const { title, onTabToggle, tabLabel } = props;\n  const [tabIdx, setTabIdx] = useState(idxMap[tabLabel]);\n\n  useEffect(() => {\n    setTabIdx(idxMap[tabLabel]);\n  }, [tabLabel]);\n\n  return (\n    <PageHeader\n      title={title}\n      extra={[\n        <Fragment key=\"render-page-header-extra\">\n          {/* <Dropdown trigger=\"click\" disabled overlay={<Options options={[\n            \"Instagram\", \n            \"YouTube\", \n            \"Twitter\"\n          ]} />}>\n            <Button disabled>\n              Instagram\n              <Icon type=\"down\" />\n            </Button>\n          </Dropdown> */}\n          <Button type=\"primary\" disabled>\n            Download CSV\n          </Button>\n          <Button type=\"primary\" disabled>\n            Export\n          </Button>\n        </Fragment>,\n      ]}\n      footer={[\n        <Tabs\n          key=\"render-page-header-footer\"\n          activeKey={tabIdx}\n          onChange={(key) => onTabToggle(tabMap[key])}\n        >\n          <TabPane tab=\"Profile Insights\" key=\"1\" />\n          <TabPane tab=\"Post Insights\" key=\"2\" />\n          <TabPane tab=\"Post Trends\" key=\"3\" />\n          <TabPane tab=\"Profile Graphs\" key=\"4\" />\n        </Tabs>,\n      ]}\n    ></PageHeader>\n  );\n};\n\n// Not good for mobile, wait til YT is done...\n// const Options = ({ options }) => {\n//   return (\n//     <Menu>\n//       {options.map(opt => <Item disabled>{opt}</Item>)}\n//     </Menu>\n//   )\n// }\n\nexport default withRouter(RenderPageHeader);\n","const getNum = (dunno) => {\n  return dunno === 'number'\n    ? dunno\n    : parseFloat(dunno)\n}\n\nexport const insertCommas = (\n  n, \n  numRemain, \n  includeSymbol\n) => {\n  const num = getNum(n);\n\n  const amount = num\n    .toFixed(numRemain)\n    .toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  return includeSymbol ? `$${amount}` : amount;\n}\n\nexport const toPercent = (float, numRemain, includeSymbol) => {\n  const n = getNum(float);\n  const num = n * 100;\n  return includeSymbol\n    ? `${num.toFixed(numRemain)}%`\n    : `${num.toFixed(numRemain)}`\n}","export const numGen = () => {\n  return Math.floor(Math.random() * 256)\n}\n\nexport const rgaGenerator = (number) => {\n  // console.log('number', number)\n  const arr = Array.from(Array(number).keys())\n  const colors = arr.map(() => {\n    return [\n      numGen(),\n      numGen(),\n      numGen(),\n    ]\n  })\n  // console.log('colors', colors)\n  return {\n    four: colors.map(color => `(${color.concat('.4').join(',')})`),\n    solid: colors.map(color => `(${color.concat(1).join(',')})`),\n    two: colors.map(color => `(${color.concat('.2').join(',')})`),\n  }\n}\n\n\nexport const hexGen = () => '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n\nexport const hexGenerator = (number) => {\n  return Array.from(Array(number).keys())\n    .map(val => hexGen())\n}\n\n// pink\n// red\n// yellow\n// orange\n// cyan\n// green\n// blue\n// purple\n// geekblue\n// magenta\n// volcano\n// gold\n// lime\n\nexport const colorMap = {\n  '1': 'purple', \n  '2': 'geekblue', \n  '3': 'cyan', \n  '4': 'green', \n  '5': 'lime', \n  '6': 'gold', \n  '7': 'orange', \n  '8': 'volcano', \n  '9': 'red',\n  '10': 'magenta', \n}\n\n// '1': 'magenta',\n// '2': 'red',\n// '3': 'volcano',\n// '4': 'orange',\n// '5': 'gold',\n// '6': 'lime',\n// '7': 'green',\n// '8': 'cyan',\n// '9': 'geekblue',\n// '10': 'purple',","import React from 'react';\n\nconst Thumbnail = ({ imgUrl, shortcode }) => {\n  // console.log('url', url)\n  return (\n    <span>\n      <a\n        href={`https://www.instagram.com/${shortcode}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ display:\"inline-block\", lineHeight: 0 }}\n      >\n        <img\n          src={imgUrl}\n          alt=\"#\"\n          style={{ height: '40px' }}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Wikiversity-Mooc-Icon-Video.svg/1000px-Wikiversity-Mooc-Icon-Video.svg.png\"\n          }}\n        />\n      </a>\n    </span>\n  )\n}\n\nexport default Thumbnail","import mixpanel from 'mixpanel-browser';\nmixpanel.init('489f49dc00c50ad6b8f401b1e55dbbf8');\n\n// let env_check = true;\nlet env_check = process.env.NODE_ENV === 'production';\n\nlet actions = {\n  track: (name, props) => {\n    if (env_check) mixpanel.track(name, props);\n  },\n  getDistinctId: () => {\n    if (env_check) {\n      const distinctId = mixpanel.get_distinct_id();\n      return distinctId;\n    }\n    return null;\n  },\n  // identify: (id) => {\n  //   if (env_check) mixpanel.identify(id);\n  // },\n  // alias: (id) => {\n  //   if (env_check) mixpanel.alias(id);\n  // },\n  // people: {\n  //   set: (props) => {\n  //     if (env_check) mixpanel.people.set(props);\n  //   },\n  // },\n};\n\nexport let Mixpanel = actions;","import React, { Fragment, useState, useEffect } from 'react';\nimport { Table, Tag, Badge } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { toPercent, insertCommas } from '../../cleaners/numbers';\nimport { colorMap } from '../../cleaners/colors';\nimport Thumbnail from '../Utilities/Thumbnail';\nimport { Mixpanel } from '../Mixpanel';\n\nconst RenderTable = ({ posts, topHashTags, topMentions, profile, location }) => {\n  const [data, setData] = useState(posts)\n  const [sortedInfo, setSortedInfo] = useState({\n    order: null,\n    columnKey: null\n  });\n\n  useEffect(() => {\n    setData(posts)\n    return () => setData(posts);\n  }, [posts])\n\n  const handleChange = (pagination, filters, sorter, extra) => {\n    // console.log('extra', extra)\n    const { order, column, columnKey } = sorter;\n    // console.log('sorter', sorter)\n    if (sorter && order && columnKey) {\n      setSortedInfo({\n        order,\n        columnKey\n      })\n      const sorted = data.sort(column.sorter)\n      setData(sorted);\n      \n      const pageName = location.pathname.split('/')[2];\n      Mixpanel.track(`Sort ${pageName} (${profile}): ${columnKey} - ${order}`, {\n        order,\n        columnKey,\n        pageName,\n        profile,\n      })\n    }\n  };\n\n  const generateTag = (tag, type, idx) => {\n    let color;\n    let link;\n\n    if (type === 'user') {\n      if (tag === topMentions[0]) color = colorMap[\"1\"];\n      if (tag === topMentions[1]) color = colorMap[\"2\"];\n      if (tag === topMentions[2]) color = colorMap[\"3\"];\n      link = `https://instagram.com/${tag}/`;\n    }\n\n    if (type === 'hash') {\n      if (tag === topHashTags[0]) color = colorMap[\"1\"];\n      if (tag === topHashTags[1]) color = colorMap[\"2\"];\n      if (tag === topHashTags[2]) color = colorMap[\"3\"];\n      link = `https://instagram.com/explore/tags/${tag}/`;\n    }\n\n    return (\n      <Tag\n        key={`${tag}-${Date.now()}-${idx}`}\n        color={color}\n      >\n        <a \n          href={link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {tag}\n        </a>\n      </Tag>\n    )\n  }\n\n  const columnWidth = 60;\n  const tagWidth = 225;\n\n  const anyVideos = posts.some(post => post.viewCount > 0);\n  const views = anyVideos ? {\n    title: 'Views',\n    dataIndex: 'viewCount',\n    sortOrder: sortedInfo.columnKey === 'viewCount' && sortedInfo.order,\n    elipsis: true,\n    render: (val) => (<span>{insertCommas(val, 0, false)}</span>)\n  } : {}\n\n  const anyDuration = posts.some(post => post.videoDuration > 0);\n  const duration = anyDuration ? {\n    title: 'Duration',\n    dataIndex: 'videoDuration',\n    sortOrder: sortedInfo.columnKey === 'videoDuration' && sortedInfo.order,\n    elipsis: true,\n    render: (val) => (<span>{insertCommas(val, 0, false)}</span>)\n  } : {}\n\n  const columns = [\n    {\n      title: 'Post',\n      dataIndex: 'thumbnail',\n      render: (url, { shortcode }) => <Thumbnail imgUrl={url} shortcode={`/p/${shortcode}`} />,\n      sorter: false,\n      sortOrder: false,\n      height: 50,\n      className: \"table-image\",\n      elipsis: true,\n      width: columnWidth,\n      fixed: 'left', \n    },\n    {\n      title: 'Engage',\n      dataIndex: 'engagement',\n      sorter: (a, b) => a.engagement - b.engagement,\n      sortOrder: sortedInfo.columnKey === 'engagement' && sortedInfo.order,\n      elipsis: true,\n      render: (val) => (<span>{toPercent(val, 2, true)}</span>)\n      // fixed: 'left',\n    },\n    {\n      title: 'Like',\n      dataIndex: 'numLikes',\n      sorter: (a, b) => a.numLikes - b.numLikes,\n      sortOrder: sortedInfo.columnKey === 'numLikes' && sortedInfo.order,\n      elipsis: true,\n      render: (val) => (<span>{insertCommas(val, 0, false)}</span>)\n    },\n    {\n      title: 'Comments',\n      dataIndex: 'numComments',\n      sorter: (a, b) => a.numComments - b.numComments,\n      sortOrder: sortedInfo.columnKey === 'numComments' && sortedInfo.order,\n      elipsis: true,\n      width: columnWidth,\n    },\n    {\n      title: 'Day',\n      dataIndex: 'dayOfWeek',\n      elipsis: true,\n    },\n    {\n      title: 'Time',\n      dataIndex: 'timeOfDay',\n      elipsis: true,\n    },\n    {\n      title: 'Orientation',\n      dataIndex: 'orientation',\n    },\n    {\n      title: 'Video?',\n      dataIndex: 'isVideo',\n      sortOrder: sortedInfo.columnKey === 'isVideo' && sortedInfo.order,\n      elipsis: true,\n      // elipsis: true\n    },\n    views,\n    duration,\n    {\n      title: 'Description Length',\n      dataIndex: 'commentTextLength',\n      elipsis: true,\n      width: columnWidth,\n    },\n    {\n      title: '#',\n      dataIndex: 'numHashtags',\n      width: columnWidth,\n    },\n    {\n      title: () => <LabelKey />,\n      dataIndex: 'hashTags',\n      width: tagWidth,\n      elipsis: true,\n      render: tags => {\n        if (tags.length > 0) {\n          return (\n            <span>\n              {tags.map((tag, idx) => generateTag(tag, 'hash', idx))}\n            </span>\n          )\n        }\n        return <span>No Hashtags</span>\n      }\n    },\n    {\n      title: '@',\n      dataIndex: 'numMentions',\n      width: columnWidth,\n    },\n    {\n      title: () => <LabelKey />,\n      dataIndex: 'commentTags',\n      width: tagWidth,\n      elipsis: true,\n      render: tags => {\n        if (tags.length > 0) {\n          return (\n            <span>\n              {tags.map((tag, idx) => generateTag(tag, 'user', idx))}\n            </span>\n          )\n        }\n        return <span>No Mentions</span>\n      }\n    },\n    // {\n    //   title: 'Colors',\n    //   render: () => <span>Coming Soon</span>\n    // }\n    // {\n    //   title: 'Comment',\n    //   dataIndex: 'comment',\n    //   sorter: false,\n    //   sortOrder: false,\n    //   // elipsis: true,\n    //   // width: columnWidth,\n    // },\n  ];\n\n  return (\n    <Table\n      dataSource={data}\n      columns={columns}\n      onChange={handleChange}\n      pagination={false}\n      scroll={{ x: 1120 }}\n    />\n  )\n}\n\n\nconst LabelKey = () => (\n  <Fragment>\n    <Badge color={colorMap[\"1\"]} text=\"1st\" />\n    <Badge color={colorMap[\"2\"]} text=\"2nd\" style={{ marginLeft: '10px' }} />\n    <Badge color={colorMap[\"3\"]} text=\"3rd\" style={{ marginLeft: '10px' }} />\n  </Fragment>\n)\n\nexport default withRouter(RenderTable);","import React, { Fragment } from 'react';\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport const RenderList = ({ list, title, fallback, symbol }) => {\n  if (list.length === 3) {\n    return (\n      <Fragment>\n        <Text>{title}</Text>\n        <Text strong>{`${symbol}${list[0]}, `}</Text>\n        <Text strong>{`${symbol}${list[1]}`}</Text>\n        <Text> and </Text>\n        <Text strong>{`${symbol}${list[2]}.`}</Text>\n      </Fragment>\n    )\n  }\n\n  if (list.length === 2) {\n    return (\n      <Fragment>\n        <Text>{title}</Text>\n        <Text strong>{`${symbol}${list[0]}`}</Text>\n        <Text> and </Text>\n        <Text strong>{`${symbol}${list[1]}.`}</Text>\n      </Fragment>\n    )\n  }\n\n  if (list.length === 1) {\n    return (\n      <Fragment>\n        <Text>{title}</Text>\n        <Text strong>{`${symbol}${list[0]}.`}</Text>\n      </Fragment>\n    )\n  }\n\n  return <Text>{fallback}</Text>\n}\n\n\nexport const WorstRoast = ({ name }) => {\n  return (\n    <Fragment>\n      <Text> Everybody else, particuarily </Text>\n      <Text strong>{`${name},`}</Text>\n      <Text> should take notes. </Text>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport { Typography } from \"antd\";\nimport \"./PostInsights.css\";\nimport { RenderList } from \"../Utilities/TextSnippets\";\n\nconst { Paragraph, Text } = Typography;\n\nconst handleNaN = (num1, num2) => {\n  if (isNaN(num1) && isNaN(num2)) {\n    return 0;\n  }\n  if (!isNaN(num1)) {\n    return Math.round(num1);\n  }\n  if (!isNaN(num2)) {\n    return Math.round(num2);\n  }\n};\n\nconst PostStatistics = ({ topStats, bottomStats, side }) => {\n  const typeOfMedia = topStats.useVideo === \"true\" ? \"video\" : \"photo\";\n  const useLongerComments =\n    topStats.avgCommentLength > bottomStats.avgCommentLength;\n  const useMoreHashtags = topStats.avgHashtags > bottomStats.avgHashtags;\n\n  const hashTagNumber = useMoreHashtags\n    ? handleNaN(topStats.avgHashtags, bottomStats.avgHashtags)\n    : handleNaN(bottomStats.avgHashtags, topStats.avgHashtags);\n\n  const plural =\n    hashTagNumber > 1 || hashTagNumber === 0 || isNaN(hashTagNumber) ? \"s\" : \"\";\n\n  return (\n    <div>\n      <Paragraph className=\"statistics-wrapper\">\n        <Text>Your best time to post is </Text>\n        <Text strong>{topStats.day}</Text>\n        <Text> at </Text>\n        <Text strong>\n          {topStats.time === \":00\" ? \"to be determined\" : topStats.time}\n        </Text>\n        <Text>. Your ideal post should be a </Text>\n        <Text strong>{typeOfMedia}</Text>\n        <Text> in </Text>\n        <Text strong>{topStats.orientationTop}</Text>\n        <Text> orientation </Text>\n        <Text> with a </Text>\n        <Text strong>{useLongerComments ? \"longer \" : \"shorter \"}</Text>\n        <Text>description than usual, try to use </Text>\n        <Text>{useLongerComments ? \"more than \" : \"less than \"}</Text>\n        <Text strong>\n          {useLongerComments\n            ? handleNaN(topStats.avgCommentLength, bottomStats.avgCommentLength)\n            : handleNaN(\n                bottomStats.avgCommentLength,\n                topStats.avgCommentLength\n              )}\n        </Text>\n        <Text> characters. </Text>\n        <Text>\n          {typeOfMedia === \"video\" &&\n            topStats.durationTop > 0 &&\n            `The video should be around ${topStats.durationTop} seconds long`}\n        </Text>\n        <RenderList\n          list={topStats.mentionTop}\n          title=\"You do your best work with \"\n          fallback=\"You dont really work with others.\"\n          symbol=\"@\"\n        />\n        <Text> Your posts do best with </Text>\n        <Text strong>{hashTagNumber === 1 ? \"a \" : `${hashTagNumber} `}</Text>\n        <Text>{`hashtag${plural}. `}</Text>\n        <RenderList\n          list={topStats.hashTop}\n          title=\"Your best hashtags are \"\n          fallback=\"You dont really use hashtags.\"\n          symbol=\"#\"\n        />\n      </Paragraph>\n    </div>\n  );\n};\n\nexport default PostStatistics;\n","import React, { useState, useEffect } from \"react\";\nimport { Mixpanel } from \"../Mixpanel\";\n\nexport const withFilter = (Component) => ({ raw, mixpanelInfo, ...props }) => {\n  const { groupName, pageName } = mixpanelInfo;\n  const mpLabel = `Filter ${pageName} (${groupName})`;\n\n  const [data, setData] = useState(raw);\n  const [isError, setIsError] = useState(false);\n  const [stringFilters, setStringFilters] = useState({\n    sport: null,\n    region: null,\n    isVerified: null,\n    isBusinessAccount: null,\n  });\n  const [sortFilter, setSortFilter] = useState(null);\n  const [trimFilter, setTrimFilter] = useState({\n    amount: 0,\n    side: \"left\",\n  });\n\n  const checkboxInit = data.reduce((acc, curr) => {\n    if (!acc[curr.name]) {\n      acc[curr.name] = true;\n    }\n    return acc;\n  }, {});\n\n  const checkboxOptions = data.map((page) => {\n    return {\n      display: page.name,\n      value: page.name,\n    };\n  });\n\n  const [checkboxFilters, setCheckboxFilter] = useState(checkboxInit);\n\n  const handleStringFilter = (filter, value) => {\n    const newState = {\n      ...stringFilters,\n      [filter]: value,\n    };\n    setStringFilters(newState);\n    Mixpanel.track(`${mpLabel}: ${filter} - ${value}`, {\n      type: filter,\n      key: value,\n      ...mixpanelInfo,\n    });\n  };\n\n  const handleCheckboxFilter = (key) => {\n    const newState = {\n      ...checkboxFilters,\n      [key]: !checkboxFilters[key],\n    };\n    setCheckboxFilter(newState);\n\n    Mixpanel.track(`${mpLabel}: profile removed - ${key}`, {\n      type: \"profile\",\n      key: key,\n      ...mixpanelInfo,\n    });\n  };\n\n  const handleTrimFilter = ({ amount, side }) => {\n    let newAmount;\n    if (amount >= 0) {\n      newAmount = amount;\n    }\n\n    if (amount === undefined || amount === null) {\n      amount = trimFilter.amount;\n    }\n    const newState = Object.assign(\n      {},\n      { amount: newAmount },\n      { side: side || trimFilter.side }\n    );\n    setTrimFilter(newState);\n  };\n\n  const updateState = () => {\n    let newState = raw;\n\n    if (Object.keys(stringFilters).some((filter) => filter !== null)) {\n      newState = newState.filter((athlete) => {\n        const passesAllFilters = Object.keys(stringFilters)\n          .filter((key) => stringFilters[key] !== null)\n          .every((key) => {\n            if (typeof athlete[key] === \"object\") {\n              return athlete[key].includes(stringFilters[key]);\n            }\n            return stringFilters[key] === athlete[key];\n          });\n\n        return passesAllFilters ? true : false;\n      });\n    }\n\n    if (sortFilter !== null) {\n      newState = newState.sort((a, b) => b[sortFilter] - a[sortFilter]);\n\n      Mixpanel.track(`${mpLabel}: sort - ${sortFilter}`, {\n        type: \"sort\",\n        key: sortFilter,\n        ...mixpanelInfo,\n      });\n    }\n\n    if (trimFilter.side === \"left\") {\n      newState = newState.slice(trimFilter.amount, newState.length);\n    } else {\n      newState = newState.slice(0, newState.length - trimFilter.amount);\n    }\n\n    if (\n      Object.keys(checkboxFilters).some((key) => checkboxFilters[key] === false)\n    ) {\n      newState = newState.filter((page) => checkboxFilters[page.name]);\n    }\n\n    if (newState.length > 0) {\n      setData(newState);\n      setIsError(false);\n    } else {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    updateState();\n  }, [stringFilters]);\n\n  useEffect(() => {\n    updateState();\n  }, [trimFilter]);\n\n  useEffect(() => {\n    updateState();\n  }, [sortFilter]);\n\n  useEffect(() => {\n    updateState();\n  }, [checkboxFilters]);\n\n  const resetAllFilters = () => {\n    Mixpanel.track(\"Reset All Filters\", {\n      ...mixpanelInfo,\n    });\n    setStringFilters({\n      sport: null,\n      region: null,\n      isVerified: null,\n      isBusinessAccount: null,\n    });\n    setSortFilter(null);\n    setTrimFilter({\n      amount: 0,\n      side: \"left\",\n    });\n    setCheckboxFilter(checkboxInit);\n  };\n\n  return (\n    <Component\n      {...props}\n      data={data}\n      mixpanelInfo={mixpanelInfo}\n      handleSortFilter={setSortFilter}\n      handleTrimFilter={handleTrimFilter}\n      handleStringFilter={handleStringFilter}\n      trimState={{\n        amount: trimFilter.amount,\n        side: trimFilter.side,\n      }}\n      handleCheckboxFilter={handleCheckboxFilter}\n      checkboxFilters={checkboxFilters}\n      checkboxOptions={checkboxOptions}\n      resetAllFilters={resetAllFilters}\n      isError={isError} // todo - error handling\n    />\n  );\n};\n","export const getDayOfWeekString = (numDay) => {\n  let dayOfWeek;\n  switch (numDay) {\n    case 0:\n      dayOfWeek = 'Sunday'\n      break;\n    case 1:\n      dayOfWeek = 'Monday'\n      break;\n    case 2:\n      dayOfWeek = 'Tuesday'\n      break;\n    case 3:\n      dayOfWeek = 'Wednesday'\n      break;\n    case 4:\n      dayOfWeek = 'Thursday'\n      break;\n    case 5:\n      dayOfWeek = 'Friday'\n      break;\n    case 6:\n      dayOfWeek = 'Saturday'\n      break;\n    default:\n      dayOfWeek = null\n      break;\n  }\n  return dayOfWeek;\n}\n\nexport const addZero = (i) => {\n  if (i < 10) {\n    i = \"0\" + i;\n  }\n  return i;\n}\n\nexport const getTimeOfDay = (fromUnix) => {\n  const d = new Date(fromUnix);\n  const h = addZero(d.getHours());\n  const m = addZero(d.getMinutes());\n  return `${h}:${m}`\n}\n\nexport const getHour = (fromUnix) => {\n  const d = new Date(fromUnix);\n  return parseInt(addZero(d.getHours()), 10)\n}\n\nexport const getDayOfWeekNum = (fromUnix) => {\n  const d = new Date(fromUnix);\n  return d.getDay();\n}","export const getMedian = (array) => {\n  if (array.length === 0) return 0;\n\n  array.sort((a, b) => {\n    return a - b;\n  });\n\n  const half = Math.floor(array.length / 2);\n\n  if (array.length % 2)\n    return array[half];\n\n  return (array[half - 1] + array[half]) / 2.0;\n}\n\nexport const getAvg = (array) => {\n  return (array.reduce((acc, curr) => acc += curr, 0)) / array.length;\n}\n\nexport const getTop = (array, numToReturn) => {\n  const map = array.reduce((acc, curr) => {\n    if (!acc[curr]) {\n      acc[curr] = 0;\n    }\n    acc[curr] += 1;\n    return acc;\n  }, {})\n\n  return Object.keys(map)\n    .map(key => [key, parseInt(map[key], 10)])\n    .sort((a, b) => b[1] - a[1]) // => [value, occurance of value]\n    .map(arr => arr[0]) // comment out if you want to check # occurances\n    .slice(0, numToReturn)\n}\n\nexport const flattenArray = (array, key) => {\n  return array.reduce((acc, curr) => {\n    if (curr[key].length > 0) {\n      curr[key].forEach(val => acc.push(val))\n    }\n    return acc;\n  }, [])\n}","import React from 'react';\nimport {\n  getDayOfWeekNum,\n  getDayOfWeekString,\n  getTimeOfDay,\n  getHour\n} from '../../cleaners/time';\nimport {\n  getAvg,\n  getTop,\n  flattenArray\n} from '../../cleaners/stats';\nimport { generateOrientation } from '../../cleaners/orientation';\n\nconst addInsights = (post) => {\n  const numDay = getDayOfWeekNum(post.timestamp * 1000);\n  return {\n    ...post,\n    isVideo: `${post.isVideo}`,\n    dayOfWeek: getDayOfWeekString(numDay),\n    timeOfDay: getTimeOfDay(post.timestamp * 1000),\n    comment: (post && post.comment && post.comment.slice(0, 50)) || '',\n    commentTextLength: (post && post.comment && post.comment.length) || 0,\n    numMentions: (post && post.commentTags && post.commentTags.length) || 0,\n    numHashtags: (post && post.hashTags && post.hashTags.length) || 0,\n    numTags: (post && post.profileTags && post.profileTags.length) || 0,\n    orientation: post && post.dimensions && generateOrientation(post.dimensions)\n  }\n}\n\nconst getSingleArrays = (array) => {\n  return array.reduce((acc, curr) => {\n    acc.timestamps.push(curr.timestamp * 1000);\n    acc.onlyIsVideos.push(curr.isVideo);\n    acc.onlyCommentLengths.push(curr.commentTextLength);\n    acc.onlyMentions.push(curr.numMentions);\n    acc.onlyHashtags.push(curr.numHashtags);\n    acc.onlyOrientation.push(curr.orientation);\n    if (curr.viewCount > 0) {\n      acc.onlyViews.push(curr.viewCount);\n    }\n    if (curr.videoDuration > 0) {\n      acc.onlyDuration.push(curr.videoDuration);\n    }\n    return acc;\n  }, {\n    timestamps: [],\n    onlyIsVideos: [],\n    onlyCommentLengths: [],\n    onlyMentions: [],\n    onlyHashtags: [],\n    onlyOrientation: [],\n    onlyViews: [],\n    onlyDuration: []\n  })\n}\n\nconst getConclusions = (array) => {\n  const {\n    timestamps,\n    onlyIsVideos,\n    onlyCommentLengths,\n    onlyMentions,\n    onlyHashtags,\n    onlyOrientation,\n    onlyViews,\n    onlyDuration,\n  } = getSingleArrays(array);\n\n  const times = timestamps.map(getHour);\n  const days = timestamps.map(getDayOfWeekNum);\n  const avgCommentLength = getAvg(onlyCommentLengths);\n  const avgMentions = getAvg(onlyMentions);\n  const avgHashtags = getAvg(onlyHashtags);\n  const avgViews = onlyViews.length > 0 ? getAvg(onlyViews) : 0;\n  const durationTop = onlyDuration.length > 0 ? getTop(onlyDuration, 1) : 0;\n\n  const flatHash = flattenArray(array, 'hashTags');\n  const flatMention = flattenArray(array, 'commentTags');\n\n  const videoTop = getTop(onlyIsVideos, 1)[0]\n  const timeTop = getTop(times, 1);\n  const dayTop = getTop(days, 1);\n  const hashTop = getTop(flatHash, 3);\n  const mentionTop = getTop(flatMention, 3);\n  const orientationTop = getTop(onlyOrientation, 1);\n\n  return {\n    time: `${timeTop}:00`,\n    day: getDayOfWeekString(parseInt(dayTop, 10)),\n    hashTop,\n    mentionTop,\n    useVideo: videoTop,\n    avgCommentLength,\n    avgMentions,\n    avgHashtags,\n    orientationTop,\n    avgViews,\n    durationTop,\n  }\n}\n\nexport const withPostInsight = Component => (props) => {\n  const { data } = props;\n  const map = data.reduce((acc, curr) => {\n    const sorted = curr.perPostData\n      .sort((a, b) => b.engagement - a.engagement);\n\n    if (!acc[curr.name]) {\n      acc[curr.name] = {};\n    }\n\n    const middle = Math.ceil(sorted.length / 2) > 10 ? 10 : Math.ceil(sorted.length / 2);\n\n    const topArray = sorted\n      .slice(0, middle)\n      .map(addInsights);\n    const topConclusions = getConclusions(topArray);\n    acc[curr.name].topPosts = topArray;\n    acc[curr.name].topStats = topConclusions;\n\n    const bottomArray = sorted\n      .slice(sorted.length - middle, sorted.length)\n      .reverse()\n      .map(addInsights);\n\n    const bottomConclusions = getConclusions(bottomArray);\n    acc[curr.name].bottomPosts = bottomArray\n    acc[curr.name].bottomStats = bottomConclusions\n\n    return acc\n  }, {})\n\n  \n  return (\n    <Component\n      {...props}\n      map={map}\n    />\n  )\n}\n\nexport default withPostInsight\n","export const generateOrientation = (d) => {\n  if (d.width > 0 && d.height > 0) {\n    if (d.width > d.height) {\n      return \"horizontal\"\n    }\n    if (d.width < d.height) {\n      return \"vertical\"\n    }\n    return \"square\"\n  }\n  return \"blank\"\n}","import React, { Fragment } from 'react';\nimport { Typography, Divider } from 'antd';\n\nconst InsightsContainer = ({ children }) => {\n  return (\n    <Fragment>\n      <Typography.Title\n        style={{\n          textAlign: 'center',\n          marginBottom: 0,\n          paddingTop: '20px',\n          paddingBottom: '10px',\n        }}\n        level={4}\n      >\n        Insights\n      </Typography.Title>\n        {children}\n      <Divider />\n    </Fragment>\n  )\n}\n\nexport default InsightsContainer\n","import React, { useState, Fragment } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { \n  PageHeader, \n  Typography, \n  Button, \n  Icon, \n  Select, \n  Radio,\n  InputNumber,\n  Checkbox,\n  Menu,\n  Dropdown\n} from 'antd';\n\nimport './Filters.css'\n\nconst { Option } = Select;\n\nexport const FilterContainer = ({ title, children }) => {\n  return (\n    <PageHeader\n      className=\"head\"\n      title={title}\n      subTitle={\n        <div className=\"title-container\">\n          {children}\n        </div>\n      }\n    />\n  )\n}\n\nexport const FilterWrapper = ({ title, children }) => {\n  return (\n    <div className=\"filter-input-wrapper\">\n      <Typography.Paragraph\n        strong\n        style={{\n          marginBottom: 0,\n        }}\n      >\n        {title}\n      </Typography.Paragraph>\n      {children}\n    </div>\n  )\n}\n\nexport const SortGroup = ({\n  isDisabled,\n  defaultValue,\n  options,\n  handleFilter,\n  width = 100,\n}) => {\n  return (\n    <Select\n      disabled={isDisabled}\n      defaultValue={defaultValue}\n      style={{ width: width }}\n      onChange={(val) => handleFilter(val)}\n    >\n      {options && options.map(opt => {\n        return (\n          <Option\n            key={`${Date.now()}-${opt.value}`}\n            value={opt.value}\n          >\n            {opt.display}\n          </Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport const SortCheckbox = ({\n  options,\n  handleCheckboxFilter,\n  checkboxFilters,\n}) => {\n  const menu = (\n    <Menu>\n      { options.map((opt, idx) => {\n        return (\n          <Menu.Item\n            key={`${idx + 1}`}\n          >\n            <Checkbox\n              onChange={() => handleCheckboxFilter(opt.value)}\n              checked={checkboxFilters[opt.value]}\n            >\n              {opt.display}\n            </Checkbox>\n          </Menu.Item>\n        )\n      })}\n    </Menu>\n  )\n\n  return (\n    <Dropdown overlay={menu} trigger={[\"click\"]} style={{ width: 150 }}>\n      <Button>\n        Profiles\n        <Icon type=\"down\" />\n      </Button>\n    </Dropdown>\n  );\n}\n\nexport const RadioGroup = ({\n  filterKey,\n  options,\n  handleFilter\n}) => {\n\n  const radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n  };\n\n  return (\n    <Fragment>\n      <Radio.Group\n        onChange={(e) => {\n          let value = e.target.value;\n          if (value === 'none') value = null;\n          if (value === 'yes') value = true;\n          if (value === 'no') value = false;\n\n          handleFilter(filterKey, value)\n        }}\n        defaultValue=\"none\"\n      >\n        {\n          options.map(opt => {\n            return (\n              <Radio\n                key={`${Date.now()}-${opt}`}\n                value={opt}\n                style={radioStyle}\n              >\n                {opt}\n              </Radio>\n            )\n          })\n        }\n      </Radio.Group>\n    </Fragment>\n  )\n}\n\nexport const TrimFilter = ({ trimState, handleTrimFilter }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n    >\n      <Radio.Group\n        defaultValue={trimState.side}\n        buttonStyle=\"solid\"\n        onChange={(e) => handleTrimFilter({ side: e.target.value })}\n      >\n        <Radio.Button value=\"left\">Left</Radio.Button>\n        <Radio.Button value=\"right\">Right</Radio.Button>\n      </Radio.Group>\n      <InputNumber\n        style={{ width: '122px' }}\n        min={0}\n        // max={currentState.length}\n        defaultValue={trimState.amount}\n        onChange={(val) => handleTrimFilter({ amount: val })}\n      />\n    </div>\n  )\n}\n\n\nconst yesNoNoneOptions = [\n  { display: 'Yes', value: true },\n  { display: 'No', value: false },\n  { display: 'None', value: null },\n]\n\nexport const sortOptions = [\n  {\n    value: 'alphabetical',\n    display: 'Alphabetical',\n  },\n  {\n    value: 'avgCommentPerPost',\n    display: 'Avg Comments'\n  },\n  {\n    value: 'avgEngag',\n    display: 'Avg Engagement'\n  },\n  {\n    value: 'avgLikePerPost',\n    display: 'Avg Likes'\n  },\n  {\n    value: 'commentBrandMentions',\n    display: 'Brand Mentions'\n  },\n  {\n    value: 'followers',\n    display: 'Followers'\n  },\n  {\n    value: 'totalPhotoCount',\n    display: 'Photo Count'\n  },\n  {\n    value: 'totalComments',\n    display: 'Total Comments'\n  },\n  {\n    value: 'totalLikes',\n    display: 'Total Likes'\n  },\n  {\n    value: 'totalVideoCount',\n    display: 'Video Count'\n  }\n]\n\nexport const SportAndRegionFilters = ({\n  handleStringFilter,\n  sportOptions,\n  regionOptions\n}) => {\n  const showSport = sportOptions && sportOptions.length > 0;\n  const showRegion = regionOptions && regionOptions.length > 0;\n\n  return (\n    <HorizontalWrapper>\n      <FilterWrapper title=\"Sport\">\n        <SortGroup\n          isDisabled={!showSport}\n          width={100}\n          defaultValue=\"None\"\n          options={sportOptions}\n          handleFilter={(val) => handleStringFilter('sport', val)}\n        />\n      </FilterWrapper>\n      <FilterWrapper title=\"Region\">\n        <SortGroup\n          isDisabled={!showRegion}\n          width={100}\n          defaultValue=\"None\"\n          options={regionOptions}\n          handleFilter={(val) => handleStringFilter('region', val)}\n        />\n      </FilterWrapper>\n    </HorizontalWrapper>\n  )\n};\n\nexport const StringFilters = ({ \n  handleStringFilter,\n  sportOptions,\n  regionOptions,\n}) => {\n  const showSport = sportOptions && sportOptions.length > 0;\n  const showRegion = regionOptions && regionOptions.length > 0;\n\n  return (\n    <HorizontalWrapper>\n      <FilterWrapper title=\"Sport\">\n        <SortGroup\n          isDisabled={!showSport}\n          width={100}\n          defaultValue=\"None\"\n          options={sportOptions}\n          handleFilter={(val) => handleStringFilter('sport', val)}\n        />\n      </FilterWrapper>\n      <FilterWrapper title=\"Region\">\n        <SortGroup\n          isDisabled={!showRegion}\n          width={100}\n          defaultValue=\"None\"\n          options={regionOptions}\n          handleFilter={(val) => handleStringFilter('region', val)}\n        />\n      </FilterWrapper>\n      <FilterWrapper title=\"Is Verified\">\n        <SortGroup\n          isDisabled={false}\n          width={100}\n          defaultValue=\"None\"\n          options={yesNoNoneOptions}\n          handleFilter={(val) => handleStringFilter('isVerified', val)}\n        />\n      </FilterWrapper>\n      <FilterWrapper title=\"Is Business\">\n        <SortGroup\n          isDisabled={false}\n          width={100}\n          defaultValue=\"None\"\n          options={yesNoNoneOptions}\n          handleFilter={(val) => handleStringFilter('isBusinessAccount', val)}\n        />\n      </FilterWrapper>\n    </HorizontalWrapper>\n  )\n}\n\nconst HorizontalWrapper = ({ children }) => (\n  <div className=\"options-wrapper\">\n    {children}\n  </div>\n)\n  \n\nexport const FilterBtnContainer = ({ children }) => {\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  return (\n    <Fragment>\n      <Button\n        // type=\"primary\"\n        onClick={() => setIsFilterOpen(!isFilterOpen)}\n        className=\"filter-btn\"\n      >\n        <Icon type=\"menu-unfold\" />\n        Filters\n      </Button>\n      {isFilterOpen && (\n        <CSSTransition\n          timeout={500}\n          classNames=\"options\"\n        >\n          <HorizontalWrapper>\n            {children}\n          </HorizontalWrapper>\n        </CSSTransition>\n      )}\n    </Fragment>\n  )\n}\n\n\n\n\n// {\n//   isProfile && (\n//     <FilterContainer>\n//       <FilterHeader title=\"Trim\" />\n//       <div\n//         style={{\n//           display: 'flex',\n//           flexDirection: 'column'\n//         }}\n//       >\n//         <Radio.Group\n//           defaultValue={trimFilter.side}\n//           buttonStyle=\"solid\"\n//           onChange={(e) => handleTrimFilter({ side: e.target.value })}\n//         >\n//           <Radio.Button value=\"left\">Left</Radio.Button>\n//           <Radio.Button value=\"right\">Right</Radio.Button>\n//         </Radio.Group>\n//         <InputNumber\n//           style={{ width: '122px' }}\n//           min={0}\n//           max={currentState.length}\n//           defaultValue={trimFilter.amount}\n//           onChange={(val) => handleTrimFilter({ amount: val })}\n//         />\n//       </div>\n//     </FilterContainer>\n//   )\n// }\n\n// export const SortFilter = () => {\n//   return (\n//     <FilterContainer>\n//       <FilterHeader title=\"Sort\" />\n//       <SortGroup\n//         isDisabled={false}\n//         options={sortOptions}\n//         handleFilter={setSortFilter}\n//         defaultValue=\"Alphabetical\"\n//         width={140}\n//       />\n//     </FilterContainer>\n//   )\n// }\n\n\n// import React from 'react';\n// import { InputNumber, Radio } from 'antd';\n\n// const TrimFilter = ({ state, handleFilter, arrayLength }) => {\n//   return (\n//     <div>\n//       <InputNumber \n//         min={0} \n//         max={arrayLength} \n//         defaultValue={state.amount}\n//         onChange={(val) => handleFilter({ amount: val })}\n//       />\n//       <Radio.Group \n//         defaultValue={state.side}\n//         style={{\n//           marginTop: '5px',\n//         }}\n//         buttonStyle=\"solid\"\n//         onChange={(e) => handleFilter({ side: e.target.value })}\n//       >\n//         <Radio.Button value=\"left\">Left</Radio.Button>\n//         <Radio.Button value=\"right\">Right</Radio.Button>\n//       </Radio.Group>\n//     </div>\n//   )\n// }\n\n// export default TrimFilter\n\n// import React from 'react';\n// import { Select } from 'antd';\n// const { Option } = Select;\n\n// const SortGroup = ({ \n//   isDisabled, \n//   defaultValue, \n//   options, \n//   handleFilter,\n//   width = 100,\n// }) => {\n//   return (\n//     <Select \n//       disabled={isDisabled}\n//       defaultValue={defaultValue}\n//       style={{ width: width }} \n//       onChange={(val) => handleFilter(val)}\n//     >\n//       {options && options.map(opt => {\n//         return (\n//           <Option \n//             key={`${Date.now()}-${opt.value}`}\n//             value={opt.value}\n//           >\n//             {opt.display}\n//           </Option>\n//         )\n//       })}\n//     </Select>\n//   )\n// }\n\n// export default SortGroup\n\n\n// import React, { Fragment } from 'react';\n// import { Radio } from 'antd';\n\n// const RadioGroup = ({ \n//   filterKey, \n//   options, \n//   handleFilter \n// }) => {\n\n//   const radioStyle = {\n//     display: 'block',\n//     height: '30px',\n//     lineHeight: '30px',\n//   };\n\n//   return (\n//     <Fragment>\n//       <Radio.Group\n//         onChange={(e) => {\n//           let value = e.target.value;\n//           if (value === 'none') value = null;\n//           if (value === 'yes') value = true;\n//           if (value === 'no') value = false;\n\n//           handleFilter(filterKey, value)\n//         }}\n//         defaultValue=\"none\"\n//       >\n//         {\n//           options.map(opt => {\n//             return (\n//               <Radio\n//                 key={`${Date.now()}-${opt}`}\n//                 value={opt}\n//                 style={radioStyle}\n//               >\n//                 {opt}\n//               </Radio>\n//             )\n//           })\n//         }\n//       </Radio.Group>\n//     </Fragment>\n\n//   )\n// }\n\n// export default RadioGroup","import React, { Fragment, useState } from 'react';\nimport { Typography, Button } from 'antd';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport Table from './Table';\nimport PostStatistics from './PostStatistics';\nimport { withFilter } from '../Filters/withFilter';\nimport { withPostInsight } from './withPostInsight';\nimport InsightsContainer from '../Utilities/InsightsContainer';\nimport { FilterContainer, FilterWrapper, SortGroup } from '../Filters/Filters';\nimport { Mixpanel } from '../Mixpanel';\n\nconst { Title } = Typography;\n\nconst PostInsights = (props) => {\n  const { map, dateLabels, history, location, match } = props;\n  const names = Object.keys(map);\n  const options = names.map(name => ({ display: name, value: name }));\n  const profileLabel = location.pathname.split('/')[3];\n  const [key, setKey] = useState(profileLabel || names[0]);\n\n  const onProfileClick = (profile) => history.push(`${match.path}/${profile}`);\n\n  return (\n    <Fragment>\n      <FilterContainer>\n        <FilterWrapper title=\"Profile\">\n          <SortGroup\n            defaultValue={key}\n            options={options}\n            handleFilter={(val) => {\n              setKey(val);\n              onProfileClick(val);\n              Mixpanel.track(`Select Profile: ${val}`, {\n                pageName: 'postInsight',\n                profile: val\n              })\n            }}\n            width={200}\n          />\n        </FilterWrapper>\n        <FilterWrapper title=\"Start\">\n          <Button disabled={true}>\n            {dateLabels[0]}\n          </Button>\n        </FilterWrapper>\n        <FilterWrapper title=\"End\">\n          <Button\n            disabled={true}\n          >\n            {dateLabels[dateLabels.length - 1]}\n          </Button>\n        </FilterWrapper>\n      </FilterContainer>\n      <Switch>\n\n        <Route exact path={`${match.url}/`}>\n          <Redirect to={`${match.url}/${key}`} />\n        </Route>\n\n        <Route path={`${match.url}/:profile`} render={() => {\n          return map && map[key] && map[key].topStats ? (\n            <Fragment>\n              <InsightsContainer>\n                <PostStatistics\n                  topStats={map[key].topStats}\n                  bottomStats={map[key].bottomStats}\n                />\n              </InsightsContainer>\n              <Title style={{ textAlign: 'center', padding: '20px 0px 10px' }}>{`${key}'s Best Posts`}</Title>\n              <Table\n                posts={map[key].topPosts}\n                topHashTags={map[key].topStats.hashTop}\n                topMentions={map[key].topStats.mentionTop}\n                profile={key}\n              />\n              <Title style={{ textAlign: 'center', padding: '20px 0px 10px' }}>{`${key}'s Worst Posts`}</Title>\n              <Table\n                posts={map[key].bottomPosts}\n                topHashTags={map[key].topStats.hashTop}\n                topMentions={map[key].topStats.mentionTop}\n                profile={key}\n              />\n            </Fragment>\n          ) : (\n            <Route>\n              <Redirect to={`${match.url}/${names[0]}`} />\n            </Route>\n          )\n        }} />\n\n      </Switch>\n    </Fragment>\n  )\n}\n\nexport default compose(\n  withRouter,\n  withFilter,\n  withPostInsight,\n)(PostInsights)\n\n\n// time: \"15:00\"\n// day: \"Sunday\"\n// hashTop: (3)[\"FindYourBackcountryPhoto:\", \"ClimateStrike\", \"NationalCoffeeDay!Photo:\"]\n// mentionTop: (3)[\"roundtheworldgirl\", \"maddiebrenneman\", \"jonisadventures\"]\n// useVideo: \"false\"\n// avgCommentLength: 466.3\n// avgMentions: 0.8\n// avgHashtags: 0.8\n\n\n// isVideo: \"true\"\n// numLikes: 4361\n// numComments: 50\n// engagement: 0.002\n// comment: \"That feeling when you find a perfectly ripe avocad\"\n// timestamp: 1561996656\n// commentTags: [\"FreshOffTheGrid!\"]\n// hashTags: []\n// profileTags: []\n// shortcode: \"BzYUWH9BnwK\"\n// thumbnail: \"https://instagram.fapa1-1.fna.fbcdn.net/vp/60abe8da10316687e74e2324ababccf5/5DA79876/t51.2885-15/e35/s150x150/64576296_452997725486473_1888993488713304444_n.jpg?_nc_ht=instagram.fapa1-1.fna.fbcdn.net&_nc_cat=101\"\n// dayOfWeek: \"Monday\"\n// timeOfDay: \"09:57\"\n// commentTextLength: 186\n// numMentions: 1\n// numHashtags: 0\n// numTags: 0","import React from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst Page = ({ title, children, showFilter }) => {\n  return (\n    <div\n      style={{ padding: '50px 48px' }}\n    >\n      <Title\n        style={{\n          textAlign: 'center'\n        }}\n      >\n        {title}\n      </Title>\n      <div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Page\n","const lineConfig = {\n  fill: false,\n  lineTension: 0.1,\n  borderCapStyle: 'square',\n  borderDash: [], // try [5, 15] for instance\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderWidth: 1,\n  pointHoverRadius: 8,\n  pointHoverBorderWidth: 2,\n  pointRadius: 4,\n  pointHitRadius: 10,\n  spanGaps: true,\n}\n\nconst dataPerPost = (data) => {\n  return data.reduce((acc, curr) => {\n    if (!curr || curr === null) {\n      acc.thumbnails.push({ thumbnail: null, id: null })\n      acc.likes.push(null)\n      acc.comments.push(null)\n      acc.engagement.push(null)\n    } else {\n      acc.thumbnails.push({ thumbnail: curr.thumbnail, id: curr.shortcode })\n      acc.likes.push(curr.numLikes)\n      acc.comments.push(curr.numComments)\n      acc.engagement.push(curr.engagement)\n    }\n\n    return acc;\n  }, {\n    thumbnails: [],\n    likes: [],    \n    comments: [],    \n    engagement: [],  \n  })\n}\n\nexport const getPerPost = (flatData) => {\n  let profileWithMostPosts = [];\n\n  const perPost = flatData.reduce((acc, page) => {\n\n    const sorted = page.perPostData.sort((a, b) => b.timestamp - a.timestamp);\n    if (sorted.length > profileWithMostPosts.length) {\n      profileWithMostPosts = sorted;\n    } \n\n    const config = {\n      ...lineConfig,\n      label: page.name,\n      borderColor: page.rgbHover, // The main line color\n      pointBackgroundColor: page.rgbSolid,\n      pointHoverBackgroundColor: page.rgbHover,\n      pointHoverBorderColor: page.rgbSolid,\n      backgroundColor: page.rgbHover,\n    }\n\n    const time = dataPerPost(page.perDateData);\n    const perPost = dataPerPost(sorted);\n    \n    // acc.sorted = sorted\n    acc.likeTime.push(Object.assign({}, config, { data: time.likes }, { thumbnails: time.thumbnails }));\n    acc.likePost.push(Object.assign({}, config, { data: perPost.likes }, { thumbnails: perPost.thumbnails }));\n    acc.commentTime.push(Object.assign({}, config, { data: time.comments }, { thumbnails: time.thumbnails }));\n    acc.commentPost.push(Object.assign({}, config, { data: perPost.comments }, { thumbnails: perPost.thumbnails }));\n    acc.engagementTime.push(Object.assign({}, config, { data: time.engagement }, { thumbnails: time.thumbnails }));\n    acc.engagementPost.push(Object.assign({}, config, { data: perPost.engagement }, { thumbnails: perPost.thumbnails }));\n\n    return acc;\n  }, {\n    likeTime: [],\n    likePost: [],\n    commentTime: [],\n    commentPost: [],\n    engagementTime: [],\n    engagementPost: [],\n    // sorted: [],\n  })\n  perPost.postLabels = profileWithMostPosts.map((d, i) => `Post ${i + 1}`)\n\n  return perPost;\n}","import React, { useState, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { insertCommas, toPercent } from '../../../cleaners/numbers';\n\nimport './Line.css';\n\nconst RenderLine = ({ \n  labels, \n  data, \n  label, \n  labelDisplay,\n  scalesConfig,\n}) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltip, setTooltip] = useState({\n    top: 0,\n    left: 0,\n    value: null,\n    label: null,\n    thumbnail: null,\n    id: null,\n    page: null,\n    side: 'auto'\n  })\n\n  const bigD = {\n    labels,\n    datasets: data\n  }\n\n  const chartRef = useRef(null);\n  \n  const handleShowTooltip = (tooltip) => {\n    const chart = chartRef.current;\n    if (!chart) {return}\n\n    if (tooltip.opacity === 0) {\n      setTooltip({\n        top: 0,\n        left: 0,\n        value: null,\n        label: null,\n        thumbnail: null,\n        id: null,\n        page: null,\n        side: 'right',\n      })\n      setShowTooltip(false)\n      return;\n    }\n\n    const position = chart.chartInstance.canvas.getBoundingClientRect();\n    const dataPoint = tooltip.dataPoints[0];\n    const page = tooltip &&\n      tooltip.body && \n      tooltip.body[0] && \n      tooltip.body[0].lines && \n      tooltip.body[0].lines[0] &&\n      tooltip.body[0].lines[0].split(':') && \n      tooltip.body[0].lines[0].split(':')[0] &&\n      tooltip.body[0].lines[0].split(':')[0];\n\n    const meta = data[dataPoint.datasetIndex].thumbnails[dataPoint.index];\n    const thumbnail = meta.thumbnail;\n    const id = meta.id;\n    const top = position.top + window.pageYOffset + tooltip.caretY;\n    const left = position.left + window.pageXOffset + tooltip.caretX;\n\n    let side;\n    if (tooltip.xAlign === 'right') {\n      side = 'left'\n    }\n\n    setTooltip({\n      thumbnail,\n      id,\n      top,\n      left,\n      label: dataPoint.label,\n      value: dataPoint.value,\n      page,\n      side\n    })\n    setShowTooltip(true)\n  }\n\n  const isDesktop = window.innerWidth > 768;\n  \n  const options = {\n    maintainAspectRatio: isDesktop,\n    scales: scalesConfig,\n    tooltips: {\n      enabled: false,\n      custom: handleShowTooltip,\n    }\n  }\n\n  return (\n    <div className=\"graph-container\">\n      <Line\n        data={bigD}\n        ref={chartRef}\n        options={options}\n        width={isDesktop ? null : 1000}\n        height={isDesktop ? null : 600}\n      />\n      {showTooltip && (\n        <Node\n          labelDisplay={labelDisplay}\n          tooltip={tooltip}\n          label={label}\n          setShowTooltip={setShowTooltip}\n        />\n      )}\n    </div>\n  )\n}\n\nconst Node = ({ tooltip, label, setShowTooltip, labelDisplay }) => {\n  // console.log('tooltip.value', tooltip.value)\n  let left = tooltip.side === 'left' \n    ? (tooltip.left - 160)\n    : tooltip.left;\n\n  const display = labelDisplay.usePercent \n    ? toPercent(\n      tooltip.value, \n      labelDisplay.numRemain,\n      labelDisplay.includeSymbol\n    )\n    : insertCommas(\n      tooltip.value, \n      labelDisplay.numRemain, \n      labelDisplay.includeSymbol\n    )\n\n  return (\n    <div\n      onMouseLeave={() => setShowTooltip(false)}\n      style={{\n        padding: '5px',\n        borderRadius: '5px',\n        position: 'absolute',\n        top: tooltip.top,\n        left: left,\n        background: `rgba(0,0,0, .8)`,\n      }}\n    >\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={`https://www.instagram.com/p/${tooltip.id}/`}>\n        <img\n          alt=\"#\"\n          src={tooltip.thumbnail}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Wikiversity-Mooc-Icon-Video.svg/1000px-Wikiversity-Mooc-Icon-Video.svg.png\";\n            e.target.style.width = '150px';\n          }}\n        />\n      </a>\n      <h2 className=\"node-info\">\n        {`${label}: ${display}`}\n      </h2>\n      <h6 className=\"node-info\">{`Page: ${tooltip.page}`}</h6>\n    </div>\n  )\n}\n\nexport default RenderLine;","import React, { useState, Fragment } from 'react';\nimport { Radio, Button, Icon } from 'antd';\nimport { compose } from 'recompose';\nimport GraphWrapper from '../GraphWrapper/GraphWrapper';\nimport { withPostTrend } from './withPostTrend';\nimport { withFilter } from '../Filters/withFilter';\nimport Line from '../Graphs/Line/Line';\nimport {\n  FilterContainer,\n  StringFilters,\n  FilterWrapper,\n  FilterBtnContainer,\n  SortCheckbox\n} from '../Filters/Filters';\n\nconst PostTrends = (props) => {\n  const [timeOrNumPosts, setTimeOrNumPosts] = useState('time');\n  const { data } = props;\n  const { numOfDays, numOfPosts, dateLabels } = props;\n\n  const noTimeScalesConfig = {\n    yAxes: [{\n      ticks: {\n        beginAtZero: true\n      }\n    }]\n  }\n\n  const timeScalesConfig = {\n    xAxes: [{\n      ticks: {\n        maxTicksLimit: 20\n      }\n    }]\n  }\n\n  return (\n    <Fragment>\n      <FilterContainer>\n        <FilterWrapper title=\"Reset\">\n          <Button\n            onClick={props.resetAllFilters}\n          >\n            <Icon type=\"undo\" />\n          </Button>\n        </FilterWrapper>\n        <FilterWrapper title=\"Days or Posts\">\n          <Radio.Group\n            defaultValue={timeOrNumPosts}\n            buttonStyle=\"solid\"\n            onChange={(e) => setTimeOrNumPosts(e.target.value)}\n          >\n            <Radio.Button value=\"time\">{`${numOfDays} days`}</Radio.Button>\n            <Radio.Button value=\"numPosts\">{`${numOfPosts} posts`}</Radio.Button>\n          </Radio.Group>\n        </FilterWrapper>\n        <FilterWrapper title=\"Filter\">\n          <SortCheckbox\n            options={props.checkboxOptions}\n            handleCheckboxFilter={props.handleCheckboxFilter}\n            checkboxFilters={props.checkboxFilters}\n          />\n        </FilterWrapper>\n        <FilterBtnContainer>\n          <FilterWrapper title=\"Start\">\n            <Button disabled={true}>\n              {dateLabels[0]}\n            </Button>\n          </FilterWrapper>\n          <FilterWrapper title=\"End\">\n            <Button\n              disabled={true}\n            >\n              {dateLabels[dateLabels.length - 1]}\n            </Button>\n          </FilterWrapper>\n          <FilterWrapper>\n            <StringFilters\n              handleStringFilter={props.handleStringFilter}\n              sportOptions={props.sportOptions}\n              regionOptions={props.regionOptions}\n            />\n          </FilterWrapper>\n        </FilterBtnContainer>\n        {/* <FilterWrapper title=\"Filter\">\n          <Typography.Text>\n            Click on a profile's key below.\n          </Typography.Text>\n        </FilterWrapper> */}\n      </FilterContainer>\n      {timeOrNumPosts === 'time' && (\n        <Fragment>\n          <GraphWrapper title={`Engagement per post over ${numOfDays} days`}>\n            <Line\n              labelDisplay={{\n                usePercent: true,\n                numRemain: 2,\n                includeSymbol: true\n              }}\n              scalesConfig={timeScalesConfig}\n              label=\"Engage\"\n              data={data.engagementTime}\n              labels={dateLabels}\n            />\n          </GraphWrapper>\n          <GraphWrapper title={`Likes per post over ${numOfDays} days`}>\n            <Line\n              labelDisplay={{\n                usePercent: false,\n                numRemain: 0,\n                includeSymbol: false\n              }}\n              scalesConfig={timeScalesConfig}\n              label=\"Likes\"\n              data={data.likeTime}\n              labels={dateLabels}\n            />\n          </GraphWrapper>\n          <GraphWrapper title={`Comments per post over ${numOfDays} days`}>\n            <Line\n              labelDisplay={{\n                usePercent: false,\n                numRemain: 0,\n                includeSymbol: false\n              }}\n              scalesConfig={timeScalesConfig}\n              label=\"Comments\"\n              data={data.commentTime}\n              labels={dateLabels}\n            />\n          </GraphWrapper>\n        </Fragment>\n      )}\n      {timeOrNumPosts === 'numPosts' && (\n        <Fragment>\n          <GraphWrapper title={`Engagement per post over ${numOfPosts} posts`}>\n            <Line\n              labelDisplay={{\n                usePercent: true,\n                numRemain: 2,\n                includeSymbol: true\n              }}\n              label=\"Engage\"\n              data={data.engagementPost}\n              labels={data.postLabels}\n              scalesConfig={noTimeScalesConfig}\n            />\n          </GraphWrapper>\n          <GraphWrapper title={`Likes per post over ${numOfPosts} posts`}>\n            <Line\n              labelDisplay={{\n                usePercent: false,\n                numRemain: 0,\n                includeSymbol: false\n              }}\n              label=\"Likes\"\n              data={data.likePost}\n              labels={data.postLabels}\n              scalesConfig={noTimeScalesConfig}\n            />\n          </GraphWrapper>\n          <GraphWrapper title={`Comments per post over ${numOfPosts} posts`}>\n            <Line\n              labelDisplay={{\n                usePercent: false,\n                numRemain: 0,\n                includeSymbol: false\n              }}\n              label=\"Comments\"\n              data={data.commentPost}\n              labels={data.postLabels}\n              scalesConfig={noTimeScalesConfig}\n            />\n          </GraphWrapper>\n        </Fragment> \n      )}\n       \n    </Fragment>\n  )\n}\n\nexport default compose(\n  withFilter,\n  withPostTrend,\n)(PostTrends)","import React from 'react';\nimport { getPerPost } from '../../cleaners/perPost';\n\nexport const withPostTrend = Component => (props) => {\n  const data = getPerPost(props.data);\n\n  return (\n    <Component\n      {...props}\n      data={data}\n      numOfDays={props.dateLabels.length}\n      numOfPosts={data.postLabels.length}\n    />\n  )\n}","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { insertCommas, toPercent } from '../../../cleaners/numbers';\n\nconst RenderBar = ({ \n  labels, \n  data, \n  label, \n  solids, \n  hovers,\n  labelDisplay\n}) => {\n\n  const bigD = {\n    labels: labels,\n    datasets: [\n      {\n        label,\n        backgroundColor: hovers,\n        borderColor: solids,\n        hoverBackgroundColor: solids,\n        hoverBorderColor: solids,\n        borderWidth: 1,\n        data: data\n      }\n    ]\n  }\n\n  // const isDesktop = window.innerWidth > 768;\n\n  return (\n    // <div className=\"graph-container\">\n      <Bar\n        data={bigD}\n        // width={isDesktop ? null : 1000}\n        // height={isDesktop ? null : 600}\n        options={{\n          // maintainAspectRatio: isDesktop,\n          tooltips: {\n            callbacks: {\n              label: (tooltip, data) => {\n                const {\n                  usePercent,\n                  numRemain,\n                  includeSymbol\n                } = labelDisplay;\n\n                let val;\n\n                if (!usePercent) {\n                  val = insertCommas(\n                    tooltip.value,\n                    numRemain,\n                    includeSymbol\n                  )\n                } else {\n                  val = toPercent(\n                    tooltip.value,\n                    numRemain,\n                    includeSymbol\n                  )\n                }\n\n                return val\n              }\n            }\n          }\n        }}\n      />\n    // </div>\n  )\n}\n\nexport default RenderBar\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst BarStacked = ({ labels, label, data, rgb }) => {\n  const bigD = {\n    labels: labels,\n    datasets: data\n  }\n\n  // const isDesktop = window.innerWidth > 768;\n\n  return (\n    // <div className=\"graph-container\">\n      <Bar \n        // width={isDesktop ? null : 1000}\n        // height={isDesktop ? null : 600}\n        data={bigD}\n        options={{\n          // maintainAspectRatio: isDesktop,\n          scales: {\n            xAxes: [{ stacked: true }],\n            yAxes: [{ stacked: true }]\n          }\n        }}\n      />\n    // </div>\n  )\n}\n\nexport default BarStacked","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { insertCommas, toPercent } from '../../../cleaners/numbers';\n\nconst BarGrouped = ({ labels, data, labelDisplay }) => {\n  const bigD = {\n    labels: labels,\n    datasets: data\n  }\n\n  // const isDesktop = window.innerWidth > 768;\n\n  return (\n    // <div className=\"graph-container\">\n      <Bar\n        // width={isDesktop ? null : 1000}\n        // height={isDesktop ? null : 600}\n        data={bigD}\n        options={{\n          tooltips: {\n            callbacks: {\n              label: (tooltip, data) => {\n                const {\n                  usePercent,\n                  numRemain,\n                  includeSymbol\n                } = labelDisplay;\n\n                let val;\n\n                if (!usePercent) {\n                  val = insertCommas(\n                    tooltip.value,\n                    numRemain,\n                    includeSymbol\n                  )\n                } else {\n                  val = toPercent(\n                    tooltip.value,\n                    numRemain,\n                    includeSymbol\n                  )\n                }\n\n                // 'val', val)\n\n                return val\n              }\n            }\n          }\n        }}\n      />\n    // </div>\n  )\n}\n\nexport default BarGrouped","import React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { toPercent } from '../../../cleaners/numbers';\n\nconst RenderPie = ({ \n  labels, \n  label, \n  data, \n  solids, \n  hovers,\n  labelDisplay\n}) => {\n\n\n  const bigD = {\n    labels: labels,\n    datasets: [{\n      data: data,\n      backgroundColor: hovers,\n      hoverBackgroundColor: solids\n    }]\n  };\n\n  const isDesktop = window.innerWidth > 768;\n  const { numRemain, includeSymbol } = labelDisplay;\n\n  return (\n    <Pie \n      data={bigD}\n      width={isDesktop ? null : 1000}\n      height={isDesktop ? null : 600}\n      options={{\n        maintainAspectRatio: isDesktop,\n        tooltips: {\n          callbacks: {\n            label: (tooltip, data) => {\n              const float = data.datasets[tooltip.datasetIndex].data[tooltip.index] || null;\n\n              const page = data.labels[tooltip.index]\n              const val = toPercent(float, numRemain || 2, includeSymbol);\n              return `${page}: ${val}`\n            }\n          }\n        }\n      }}\n    />\n  )\n}\n\nexport default RenderPie\n","import { numGen } from './colors';;\n\nexport const getFlatDataOneKey = (data, key) => {\n  const flatData = data.data\n    .map(thing => thing)\n    .sort((a, b) => {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n      if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n      return 0;\n    })\n    .map(page => {\n      const rgb = [numGen(), numGen(), numGen()].join(',');\n      return {\n        ...page,\n        rgbSolid: `rgba(${rgb},1)`,\n        rgbHover: `rgba(${rgb},.5)`,\n      }\n    })\n\n  return flatData\n}\n\nexport const pFSH = ({ flatData }) => {\n  return flatData.reduce((acc, curr) => {\n    acc.profiles.push(curr.name);\n    acc.followers.push(curr.followers);\n    acc.solids.push(curr.rgbSolid);\n    acc.hovers.push(curr.rgbHover);\n    acc.avgEngagement.push(curr.avgEngag);\n    acc.pricePerPost.push(curr.pricePerPost);\n    acc.avgViewsPerVideo.push(curr.avgViewsPerVideo);\n    acc.commentBrandMentions.push(curr.commentBrandMentions);\n    \n    return acc;\n  }, {\n    profiles: [],\n    followers: [],\n    solids: [],\n    hovers: [],\n    avgEngagement: [],\n    pricePerPost: [],\n    avgViewsPerVideo: [],\n    commentBrandMentions: [],\n  })\n} ","export const compareTwo = ({ \n  flatData, \n  key1, \n  key2, \n  solids, \n  hovers,\n  label1,\n  label2\n}) => {\n  const total1 = flatData.map(page => page[key1])\n  const total2 = flatData.map(page => page[key2])\n\n  return [\n    {\n      label: label1,\n      data: total1,\n      backgroundColor: solids\n    },\n    {\n      label: label2,\n      data: total2,\n      backgroundColor: hovers\n    }\n  ]\n}","import React, { Fragment } from \"react\";\nimport { compose } from \"recompose\";\nimport { Button, Icon } from \"antd\";\nimport GraphWrapper from \"../GraphWrapper/GraphWrapper\";\nimport BarSingle from \"../Graphs/BarSingle/BarSingle\";\nimport BarStacked from \"../Graphs/BarStacked/BarStacked\";\nimport BarGrouped from \"../Graphs/BarGrouped/BarGrouped\";\nimport Pie from \"../Graphs/Pie/Pie\";\nimport { withFilter } from \"../Filters/withFilter\";\nimport { withProfileTrend } from \"./withProfileTrends\";\nimport {\n  FilterContainer,\n  FilterWrapper,\n  StringFilters,\n  SortGroup,\n  sortOptions,\n  FilterBtnContainer,\n  SortCheckbox,\n} from \"../Filters/Filters\";\n\nconst ProfileTrends = (props) => {\n  const { data } = props;\n  const { shareOfVoice, areThereSomeBrandMentions } = data;\n  // console.log('ProfileTrends props', props)\n\n  return (\n    <Fragment>\n      <FilterContainer>\n        <FilterWrapper title=\"Reset\">\n          <Button onClick={props.resetAllFilters}>\n            <Icon type=\"undo\" />\n          </Button>\n        </FilterWrapper>\n        <FilterWrapper title=\"Sort\">\n          <SortGroup\n            defaultValue={\"alphabetical\"}\n            options={sortOptions}\n            handleFilter={props.handleSortFilter}\n            width={200}\n          />\n        </FilterWrapper>\n        <FilterWrapper title=\"Filter\">\n          <SortCheckbox\n            options={props.checkboxOptions}\n            handleCheckboxFilter={props.handleCheckboxFilter}\n            checkboxFilters={props.checkboxFilters}\n          />\n        </FilterWrapper>\n        <FilterBtnContainer>\n          <StringFilters\n            handleStringFilter={props.handleStringFilter}\n            sportOptions={props.sportOptions}\n            regionOptions={props.regionOptions}\n          />\n          {/* <FilterWrapper title=\"Trim (via sort)\">\n            <TrimFilter\n              trimState={props.trimState}\n              handleTrimFilter={props.handleTrimFilter}\n            />\n          </FilterWrapper> */}\n        </FilterBtnContainer>\n      </FilterContainer>\n      <GraphWrapper title=\"Share of Voice\">\n        <Pie\n          // this ALWAYS uses percent\n          numRemain={2}\n          labelDisplay={{\n            numRemain: 2,\n            includeSymbol: true,\n          }}\n          label=\"Share of Voice\"\n          labels={data.profiles}\n          data={shareOfVoice.percent}\n          solids={data.solids}\n          hovers={data.hovers}\n        />\n      </GraphWrapper>\n      <GraphWrapper title=\"Followers\" showFilter>\n        <BarSingle\n          labelDisplay={{\n            usePercent: false,\n            numRemain: 0,\n            includeSymbol: false,\n          }}\n          data={data.followers}\n          labels={data.profiles}\n          solids={data.solids}\n          hovers={data.hovers}\n          label=\"\"\n        />\n      </GraphWrapper>\n      <GraphWrapper title={`Type of Content`}>\n        <BarStacked\n          data={data.totalPhotosVsVideos}\n          labels={data.profiles}\n          label=\"Videos vs Photos\"\n        />\n      </GraphWrapper>\n      <GraphWrapper title=\"Avg Engagement\">\n        <BarSingle\n          labelDisplay={{\n            usePercent: true,\n            numRemain: 2,\n            includeSymbol: true,\n          }}\n          data={data.avgEngagement}\n          labels={data.profiles}\n          solids={data.solids}\n          hovers={data.hovers}\n          label=\"\"\n        />\n      </GraphWrapper>\n      {areThereSomeBrandMentions && (\n        <GraphWrapper title=\"Number of Brand Mentions in Comments\">\n          <BarSingle\n            labelDisplay={{\n              usePercent: false,\n              numRemain: 0,\n              includeSymbol: false,\n            }}\n            data={data.commentBrandMentions}\n            labels={data.profiles}\n            solids={data.solids}\n            hovers={data.hovers}\n            label=\"\"\n          />\n        </GraphWrapper>\n      )}\n      {/* <GraphWrapper title=\"Avg Value per Post\">\n        <BarSingle\n          labelDisplay={{\n            usePercent: false,\n            numRemain: 2,\n            includeSymbol: true\n          }}\n          data={data.pricePerPost}\n          labels={data.profiles}\n          solids={data.solids}\n          hovers={data.hovers}\n          label=\"\"\n        />\n      </GraphWrapper> */}\n      <GraphWrapper title=\"Avg Likes\">\n        <BarGrouped\n          labelDisplay={{\n            usePercent: false,\n            numRemain: 0,\n            includeSymbol: false,\n          }}\n          data={data.avgLikes}\n          labels={data.profiles}\n          label=\"Likes\"\n        />\n      </GraphWrapper>\n      <GraphWrapper title=\"Avg Comments\">\n        <BarGrouped\n          labelDisplay={{\n            usePercent: false,\n            numRemain: 0,\n            includeSymbol: false,\n          }}\n          data={data.avgComments}\n          labels={data.profiles}\n          label=\"Comments\"\n        />\n      </GraphWrapper>\n      <GraphWrapper title=\"Avg Video Views\">\n        <BarSingle\n          labelDisplay={{\n            usePercent: false,\n            numRemain: 0,\n            includeSymbol: false,\n          }}\n          data={data.avgViewsPerVideo}\n          labels={data.profiles}\n          solids={data.solids}\n          hovers={data.hovers}\n          label=\"\"\n        />\n      </GraphWrapper>\n    </Fragment>\n  );\n};\n\nexport default compose(withFilter, withProfileTrend)(ProfileTrends);\n","import React from 'react';\nimport { pFSH } from '../../cleaners/init';\nimport { getShareOfVoice } from '../../cleaners/voice';\nimport { compareTwo } from '../../cleaners/compare';\n\n\nexport const withProfileTrend = Component => (props) => {\n  const { data } = props;\n  const { \n    profiles, \n    followers, \n    solids, \n    hovers,\n    avgEngagement,\n    pricePerPost,\n    avgViewsPerVideo,\n    commentBrandMentions,\n  } = pFSH({ flatData: data });\n\n  // todo - refactor these into one?\n\n  const totalPhotosVsVideos = compareTwo({\n    flatData: data,\n    key1: 'totalVideoCount',\n    key2: 'totalPhotoCount',\n    solids,\n    hovers,\n    label1: 'Video',\n    label2: 'Photo'\n  })\n\n  const avgLikes = compareTwo({\n    flatData: data,\n    key1: 'avgLikesPerVideo',\n    key2: 'avgLikesPerPhoto',\n    solids,\n    hovers,\n    label1: 'Video',\n    label2: 'Photo'\n  })\n\n  const avgComments = compareTwo({\n    flatData: data,\n    key1: 'avgCommentsPerVideo',\n    key2: 'avgCommentsPerPhoto',\n    solids,\n    hovers,\n    label1: 'Video',\n    label2: 'Photo'\n  })\n\n  const shareOfVoice = getShareOfVoice({ flatData: data })\n  const areThereSomeBrandMentions = commentBrandMentions.some(val => val > 0);\n\n  return (\n    <Component\n      {...props}\n      data={{\n        profiles,\n        followers,\n        solids,\n        hovers,\n        avgEngagement,\n        pricePerPost,\n        avgViewsPerVideo,\n        commentBrandMentions,\n        totalPhotosVsVideos,\n        avgLikes,\n        avgComments,\n        areThereSomeBrandMentions,\n        shareOfVoice,\n      }}\n    />\n  )\n}","export const getShareOfVoice = ({ flatData }) => {\n  const total = flatData.reduce((acc, curr) => {\n    acc += (curr.totalLikes + curr.totalComments);\n    return acc;\n  }, 0)\n\n  const percent = flatData.map(page => {\n    const sum = (page.totalLikes + page.totalComments)\n    return sum / total\n  })\n  return { total, percent }\n}","import React from 'react';\n\nconst getRank = (data, key) => {\n  return data\n    .map(profile => {\n      return {\n        ...profile,\n        [key]: (profile.followers / 100) * profile[key]\n      }\n    })\n    .sort((a, b) => b[key] - a[key])\n    .map((profile, idx) => ({ name: profile.name, rank: idx + 1 }))\n    .reduce((acc, curr) => {\n      if (!acc[curr]) {\n        acc[curr.name] = curr.rank;\n      }\n      return acc;\n    }, {})\n}\n\nconst getTotal = (data) => {\n  return data.reduce((acc, curr) => {\n    acc += (curr.totalLikes + curr.totalComments);\n    return acc;\n  }, 0)\n}\n\nexport const withProfileInsights = Component => (props) => {\n  const { data } = props;\n  \n  const map = getRank(data, 'avgEngag');\n  const photoMap = getRank(data, 'photoEngage');\n  const videoMap = getRank(data, 'videoEngage');\n  const totalVoice = getTotal(data);\n\n  const dataWithRanks = data.map(profile => {\n    return {\n      ...profile,\n      videoRank: videoMap[profile.name],\n      photoRank: photoMap[profile.name],\n      overallRank: map[profile.name],\n      shareOfVoice: (profile.totalLikes + profile.totalComments) / totalVoice,\n    }\n  })\n\n  const ranks = dataWithRanks.reduce((acc, curr) => {\n    if (curr.followers > acc.mostFollowers.followers) {\n      acc.mostFollowers = curr;\n    }\n\n    if (curr.avgEngag > acc.bestOverallEngagement.avgEngag) {\n      acc.bestOverallEngagement = curr;\n    }\n\n    if (curr.avgEngag < acc.worstOverallEngagement.avgEngag || acc.worstOverallEngagement.avgEngag === 0) {\n      acc.worstOverallEngagement = curr;\n    }\n\n    if (curr.photoEngage > acc.bestPhotoEngagement.engagement) {\n      acc.bestPhotoEngagement = curr;\n    }\n\n    if (curr.photoEngage < acc.worstPhotoEngagement.engagement || acc.worstPhotoEngagement.engagement === 0 ) {\n      acc.worstPhotoEngagement = curr;\n    }\n\n    if (curr.videoEngage > acc.bestVideoEngagement.engagement) {\n      acc.bestVideoEngagement = curr;\n    }\n\n    if (curr.videoEngage > acc.worstVideoEngagement.engagement) {\n      acc.worstVideoEngagement = curr;\n    }\n\n    if (curr.overallRank === 1) {\n      acc.bestOverallScore = curr;\n    }\n\n    if (curr.videoRank === 1) {\n      acc.bestVideoScore = curr;\n    }\n\n    if (curr.photoRank === 1) {\n      acc.bestPhotoScore = curr;\n    }\n\n    if (curr.overallRank === dataWithRanks.length) {\n      acc.worstOverallScore = curr;\n    }\n\n    if (curr.photoRank === dataWithRanks.length) {\n      acc.worstPhotoScore = curr;\n    }\n\n    if (curr.videoRank === dataWithRanks.length) {\n      acc.worstVideoScore = curr;\n    }\n\n    if (curr.cadence > acc.bestCadence.cadence) {\n      acc.bestCadence = curr;\n    }\n\n    if (curr.cadence < acc.worstCadence.cadence || acc.worstCadence.cadence === 0) {\n      acc.worstCadence = curr;\n    }\n\n    return acc;\n  }, {\n    bestOverallEngagement: { avgEngag: 0 },\n    bestPhotoEngagement: { engagement: 0 },\n    bestVideoEngagement: { engagement: 0 },\n    bestOverallScore: { engagement: 0 },\n    bestPhotoScore: { engagement: 0 },\n    bestVideoScore: { engagement: 0 },\n    worstOverallScore: { engagement: 0 },\n    worstPhotoScore: { engagement: 0 },\n    worstVideoScore: { engagement: 0 },\n    worstOverallEngagement: { avgEngag: 0 },\n    worstPhotoEngagement: { engagement: 0 },\n    worstVideoEngagement: { engagement: 0 },\n    mostFollowers: { followers: 0 },\n    bestCadence: { cadence: 0 },\n    worstCadence: { cadence: 0 },\n    // mostLikes: { name: null, likes: 0 },\n  }) \n\n  return (\n    <Component\n      {...props}\n      data={dataWithRanks}\n      ranks={ranks}\n    />\n  )\n}\n\n// name: \"Backcountry\"\n// biography: \"The backcountry is where you play, unwind, and connect with nature. We have everything you need to get you there. #FindYourBackcountry\"\n// isVerified: true\n// isBusinessAccount: true\n// followers: 730149\n// followees: 2059\n// newestTimestamp: 1571000598\n// oldestTimestamp: 1560656378\n// totalPostCount: 114\n// totalLikes: 505156\n// totalComments: 3155\n// avgLikePerPost: 4431.19\n// avgCommentPerPost: 27.68\n// totalPhotoCount: 112\n// totalVideoCount: 2\n// totalLikesOnPhotos: 499272\n// totalLikesOnVideos: 5884\n// totalCommentsOnPhotos: 3111\n// totalCommentsOnVideos: 44\n// avgLikesPerPhoto: 4457.79\n// avgLikesPerVideo: 2942\n// avgCommentsPerPhoto: 27.78\n// avgCommentsPerVideo: 22\n// totalViewCount: 28863\n// avgViewsPerVideo: 14431.5\n// perPostData: (114)\n// avgEngag: 0.006\n// photoEngage: 0.006\n// videoEngage: 0.004\n// pricePerPost: 438.08939999999996\n// commentBrandMentions: 0\n// perDateData: (121)\n// rgbSolid: \"rgba(39,27,87,1)\"\n// rgbHover: \"rgba(39,","import React, { useState, useEffect } from 'react';\nimport { Table, Tag, Button, Tooltip } from 'antd';\nimport { withRouter } from 'react-router-dom'\nimport { insertCommas, toPercent } from '../../cleaners/numbers';\nimport { colorMap } from '../../cleaners/colors';\nimport Thumbnail from '../Utilities/Thumbnail';\nimport { Mixpanel } from '../Mixpanel';\n\nconst isPresenting = false;\n\nconst RenderTable = ({ posts, usePicture, location, history }) => {\n  const [data, setData] = useState(posts);\n  const [sortedInfo, setSortedInfo] = useState({\n    order: null,\n    columnKey: null\n  });\n\n  useEffect(() => {\n    setData(posts)\n    return () => setData(posts);\n  }, [posts])\n\n  const handleChange = (pagination, filters, sorter, extra) => {\n    // console.log('pagination', pagination)\n    // console.log('filters', filters)\n    // console.log('extra', extra)\n    const { order, column, columnKey } = sorter;\n    // console.log('sorter', sorter)\n    if (sorter && order && columnKey) {\n      setSortedInfo({\n        order,\n        columnKey\n      })\n      const sorted = data.sort(column.sorter)\n      setData(sorted);\n\n      const split = location.pathname.split('/');\n      const group = split[1];\n      const pageName = split[2];\n      Mixpanel.track(`Sort ${pageName} (${group}): ${columnKey} - ${order}`, {\n        order,\n        columnKey,\n        pageName,\n        profile,\n      })\n    }\n  };\n\n  let profile;\n\n  if (usePicture) {\n    profile = {\n      title: 'Profile',\n      dataIndex: 'profilePic',\n      fixed: 'left',\n      render: (picUrl, user) => (\n        <Thumbnail \n          imgUrl={picUrl} \n          shortcode={user.username} \n        />\n      ),\n    }\n  }\n\n  if (!usePicture) {\n    profile = {\n      title: 'Profile',\n      dataIndex: 'name',\n      width: 60,\n      fixed: 'left',\n      sorter: (a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (b.name > a.name) {\n          return -1;\n        }\n        if (a.name === b.name) {\n          return 0;\n        }\n      },\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n      render: (name, user) => (\n        <span>\n          <a\n            href={`https://instagram.com/${user.username}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {name}\n          </a>\n        </span>\n      )\n    }\n  }\n\n  const sameCadence = posts.every(val => val.cadence === posts[0].cadence);\n  const cadence = sameCadence ? {} : {\n    title: (\n      <Tooltip title=\"How frequent, per week, they post\">\n        Cadence\n      </Tooltip>\n    ),\n    dataIndex: 'cadence',\n    sorter: (a, b) => a.cadence - b.cadence,\n    sortOrder: sortedInfo.columnKey === 'cadence' && sortedInfo.order,\n    render: (val) => <span>{`${insertCommas((val * 7), 2, false)}/wk`}</span>,\n  };\n\n  const postButton = {\n    title: (\n      <Tooltip title=\"The profile's best and worst posts\">\n        Post Insights\n      </Tooltip>\n    ),\n    dataIndex: null,\n    render: (insta) => {\n      const totalPosts = insta.totalPostCount > 20 ? 10 : Math.ceil(insta.totalPostCount / 2);\n      return (\n        <Button\n          onClick={() => {\n            Mixpanel.track(`Route: Profile to ${insta.name}`)\n            window.scrollTo(0, 0)\n            history.push(`postInsight/${insta.name}`)\n          }}\n        >\n          {`Best ${totalPosts} Posts`}\n        </Button>\n      )\n    }\n  }\n\n  const followers = {\n    title: 'Followers',\n    dataIndex: 'followers',\n    sorter: (a, b) => a.followers - b.followers,\n    sortOrder: sortedInfo.columnKey === 'followers' && sortedInfo.order,\n    render: (val) => <span>{insertCommas(val, 0, false)}</span>,\n  };\n\n  const bestDay = {\n    title: (\n      <Tooltip title=\"Their best day to post\">\n        Day\n      </Tooltip>\n    ),\n    dataIndex: 'bestDay',\n  };\n\n  const bestTime = {\n    title: (\n      <Tooltip title=\"Their best time to post\">\n        Time\n      </Tooltip>\n    ),\n    dataIndex: 'bestTime',\n  }\n\n  const shareOfVoice = {\n    title: (\n      <Tooltip title=\"Share of Voice\">\n        Voice\n      </Tooltip>\n    ),\n    dataIndex: 'shareOfVoice',\n    sorter: (a, b) => a.shareOfVoice - b.shareOfVoice,\n    sortOrder: sortedInfo.columnKey === 'shareOfVoice' && sortedInfo.order,\n    render: (val) => <span>{toPercent(val, 2, true)}</span>,\n  };\n\n  const avgLikes = {\n    title: (\n    <Tooltip title=\"Average Likes\">\n      Likes\n    </Tooltip>\n    ),\n    dataIndex: 'avgLikePerPost',\n    sorter: (a, b) => a.avgLikePerPost - b.avgLikePerPost,\n    sortOrder: sortedInfo.columnKey === 'avgLikePerPost' && sortedInfo.order,\n    render: (val) => <span>{insertCommas(val, 0, false)}</span>,\n  };\n\n  const avgComments = {\n    title: (\n      <Tooltip title=\"Average Comments\">\n        Comm\n    </Tooltip>\n    ),\n    dataIndex: 'avgCommentPerPost',\n    sorter: (a, b) => a.avgCommentPerPost - b.avgCommentPerPost,\n    sortOrder: sortedInfo.columnKey === 'avgCommentPerPost' && sortedInfo.order,\n    render: (val) => <span>{insertCommas(val, 0, false)}</span>,\n  };\n\n  const avgViews = {\n    title: (\n      <Tooltip title=\"Average Video Views\">\n        Views\n    </Tooltip>\n    ),\n    dataIndex: 'avgViewsPerVideo',\n    sorter: (a, b) => a.avgViewsPerVideo - b.avgViewsPerVideo,\n    sortOrder: sortedInfo.columnKey === 'avgViewsPerVideo' && sortedInfo.order,\n    render: (val) => <span>{insertCommas(val, 0, false)}</span>,\n  };\n\n  const valuePerPost = {\n    title: (\n      <Tooltip title=\"Average Post Value: (Followers / 10) * Average Post Engagement\">\n        Value\n      </Tooltip>\n    ),\n    dataIndex: 'pricePerPost',\n    sorter: (a, b) => a.pricePerPost - b.pricePerPost,\n    sortOrder: sortedInfo.columnKey === 'pricePerPost' && sortedInfo.order,\n    render: (val) => <span>{insertCommas(val, 2, true)}</span>,\n  };\n\n  const avgEngagement = {\n    title: (\n      <Tooltip title=\"Average Post Engagement\">\n        Engage\n      </Tooltip>\n    ),\n    dataIndex: 'avgEngag',\n    sorter: (a, b) => a.avgEngag - b.avgEngag,\n    sortOrder: sortedInfo.columnKey === 'avgEngag' && sortedInfo.order,\n    render: (val) => <span>{toPercent(val, 2, true)}</span>\n  };\n\n  const photoRank = {\n    title: (\n      <Tooltip title=\"Photo Ranking: (Followers / 10) * Photo Engagement\">\n        Photo\n      </Tooltip>\n    ),\n    dataIndex: 'photoRank',\n    sorter: (a, b) => a.photoRank - b.photoRank,\n    sortOrder: sortedInfo.columnKey === 'photoRank' && sortedInfo.order,\n    render: (rank) => {\n      const color = colorMap[rank];\n      return (\n        <span>\n          <Tag color={color}>{rank}</Tag>\n        </span>\n      )\n    }\n  };\n\n  const videoRank = {\n    title: (\n      <Tooltip title=\"Video Ranking: (Followers / 10) * Video Engagement\">\n        Video\n      </Tooltip>\n    ),\n    dataIndex: 'videoRank',\n    sorter: (a, b) => a.videoRank - b.videoRank,\n    sortOrder: sortedInfo.columnKey === 'videoRank' && sortedInfo.order,\n    render: (rank) => {\n      const color = colorMap[rank]\n      return (\n        <span>\n          <Tag color={color}>{rank}</Tag>\n        </span>\n      )\n    }\n  };\n\n  const overallRank = {\n    title: (\n      <Tooltip title=\"Overall Ranking: (Followers / 10) * Post Engagement\">\n        Overall\n      </Tooltip>\n    ),\n    dataIndex: 'overallRank',\n    sorter: (a, b) => a.overallRank - b.overallRank,\n    sortOrder: sortedInfo.columnKey === 'overallRank' && sortedInfo.order,\n    render: (rank) => {\n      const color = colorMap[rank]\n      return (\n        <span>\n          <Tag color={color}>{rank}</Tag>\n        </span>\n      )\n    }\n  };\n\n  const presColumns = [\n    profile,\n    avgEngagement,\n    bestDay,\n    avgLikes,\n    shareOfVoice,\n    photoRank,\n    videoRank,\n    overallRank,\n    // cutoff\n    followers,\n    valuePerPost,\n    bestTime,\n    cadence,\n    avgComments,\n    avgViews,\n  ]\n\n  const normalColumns = [\n    profile,\n    followers,\n    bestDay,\n    bestTime,\n    cadence,\n    shareOfVoice,\n    avgLikes,\n    avgComments,\n    avgViews,\n    avgEngagement,\n    valuePerPost,\n    postButton,\n    photoRank,\n    videoRank,\n    overallRank,\n  ]\n\n  const columns = isPresenting ? presColumns : normalColumns\n\n  return (\n    <Table\n      dataSource={data}\n      columns={columns}\n      onChange={handleChange}\n      pagination={false}\n      scroll={{ x: 1030 }}\n    />\n  )\n}\n\nexport default withRouter(RenderTable);\n\n// name: \"Backcountry\"\n// biography: \"The backcountry is where you play, unwind, and connect with nature. We have everything you need to get you there. #FindYourBackcountry\"\n// isVerified: true\n// isBusinessAccount: true\n// followers: 730149\n// followees: 2059\n// newestTimestamp: 1571000598\n// oldestTimestamp: 1560656378\n// totalPostCount: 114\n// totalLikes: 505156\n// totalComments: 3155\n// avgLikePerPost: 4431.19\n// avgCommentPerPost: 27.68\n// totalPhotoCount: 112\n// totalVideoCount: 2\n// totalLikesOnPhotos: 499272\n// totalLikesOnVideos: 5884\n// totalCommentsOnPhotos: 3111\n// totalCommentsOnVideos: 44\n// avgLikesPerPhoto: 4457.79\n// avgLikesPerVideo: 2942\n// avgCommentsPerPhoto: 27.78\n// avgCommentsPerVideo: 22\n// totalViewCount: 28863\n// avgViewsPerVideo: 14431.5\n// perPostData: (114)\n// avgEngag: 0.006\n// photoEngage: 0.006\n// videoEngage: 0.004\n// pricePerPost: 438.08939999999996\n// commentBrandMentions: 0\n// perDateData: (121)\n// rgbSolid: \"rgba(39,27,87,1)\"\n// rgbHover: \"rgba(39,","import React, { Fragment } from 'react';\nimport { Typography } from 'antd';\nimport { WorstRoast } from '../Utilities/TextSnippets';\nimport { getTop } from '../../cleaners/stats';\n\nconst { Paragraph, Text } = Typography;\n\nconst DontRepeat = ({ list, ending }) => {\n  // console.log('list', list)\n  const noRepeats = [...new Set(list.filter(val => val !== null))];\n  \n  if (noRepeats.length === 3) {\n    return (\n      <Fragment>\n        <Text strong>{`${noRepeats[0]}, `}</Text>\n        <Text strong>{`${noRepeats[1]} `}</Text>\n        <Text> and </Text>\n        <Text strong>{`${noRepeats[2]} `}</Text>\n        <Text>{ending}</Text>\n      </Fragment>\n    )\n  } \n  \n  if (noRepeats.length === 2) {\n    return (\n      <Fragment>\n        <Text strong>{`${noRepeats[0]} `}</Text>\n        <Text> and </Text>\n        <Text strong>{`${noRepeats[1]} `}</Text>\n        <Text>{ending}</Text>\n      </Fragment>\n    )\n  }\n\n  if (noRepeats.length === 1) {\n    return (\n      <Fragment>\n        <Text strong>{`${noRepeats[0]} `}</Text>\n        <Text>{ending}</Text>\n      </Fragment>\n    )\n  }\n}\n\nconst MostPopular = ({ name }) => (\n  <Fragment>\n    <Text strong>{` ${name} `}</Text>\n    <Text> is the most popular. </Text>\n  </Fragment>\n)\n\nconst BestDayAndTime = ({ bestDay, bestTime }) => {\n  return (\n    <Fragment>\n      <Text>This group's best day to post is </Text>\n      <Text strong>{` ${bestDay} `}</Text>\n      <Text> at </Text>\n      <Text strong>{` ${bestTime}. `}</Text>\n    </Fragment>\n  )\n}\n\nconst Cadence = ({ best, worst }) => {\n  return (\n    <Fragment>\n      <Text strong>{`${best} `}</Text>\n      <Text>likes to post the most, while </Text>\n      <Text strong>{`${worst} `}</Text>\n      <Text>seems to be the most shy. </Text>\n    </Fragment>\n  )\n}\n\nconst Engagement = ({ best, worst }) => {\n  return (\n    <Fragment>\n      <Text strong>{`${best}`}</Text>\n      <Text> engages the best out of this crew, while </Text>\n      <Text strong>{`${worst} `}</Text>\n      <Text> should try a new strategy. </Text>\n    </Fragment>\n  )\n}\n\nconst ProfileStatistics = ({ ranks, data }) => {\n  // console.log('ranks', ranks)\n  // console.log('data', data)\n\n  const samePhotoAndVideoScore = ranks.bestPhotoScore === ranks.bestVideoScore;\n  const diffPhotoAndVideoScore = ranks.bestPhotoScore !== ranks.bestVideoScore;\n  // best overall\n  const { dayOnly, timeOnly } = data.reduce((acc, curr) => {\n    acc.dayOnly.push(curr.bestDay)\n    acc.timeOnly.push(curr.bestTime)\n    return acc;\n  }, {\n    dayOnly: [],\n    timeOnly: [],\n  });\n\n  const bestDay = getTop(dayOnly, 1);\n  const bestTime = getTop(timeOnly, 1)\n\n  // {`${}`}\n\n  return (\n    <div>\n      <Paragraph\n        className=\"statistics-wrapper\"\n      >\n        {samePhotoAndVideoScore && (\n          <Fragment>\n            <Text>This round is over! </Text>\n            <Text strong>{`${ranks.bestPhotoScore.name} `}</Text>\n            <Text> is the best at photo and video.</Text>\n            <WorstRoast name={ranks.worstOverallScore.name} />\n            <BestDayAndTime\n              bestDay={bestDay}\n              bestTime={bestTime}\n            />\n            {ranks.bestCadence.name !== ranks.worstCadence.name && (\n              <Cadence\n                best={ranks.bestCadence.name}\n                worst={ranks.worstCadence.name}\n              />\n            )}\n          </Fragment>\n        )}\n        {diffPhotoAndVideoScore && (\n          <Fragment>\n            <Text>This round is close! </Text>\n            <Text strong>{`${ranks.bestPhotoScore.name}`}</Text>\n            <Text> is crushing the photo game, while </Text>\n            <Text strong>{`${ranks.bestVideoScore.name}`}</Text>\n            <Text> has video on lock.</Text>\n            <Text strong>{` ${ranks.bestOverallScore.name}`}</Text>\n            <Text> is the best overall. </Text>\n            <MostPopular name={ranks.mostFollowers.name} />\n            <Engagement \n              best={ranks.bestOverallEngagement.name}\n              worst={ranks.worstOverallEngagement.name}\n            />\n            <DontRepeat\n              list={[\n                ranks.worstOverallEngagement.name === ranks.worstPhotoScore.name ? null : ranks.worstPhotoScore.name,\n                ranks.worstOverallEngagement.name === ranks.worstVideoScore.name ? null : ranks.worstVideoScore.name,\n                ranks.worstOverallEngagement.name === ranks.worstOverallScore.name ? null : ranks.worstOverallScore.name,\n              ]}\n              ending='should take better notes in every class. '\n            />\n            <BestDayAndTime\n              bestDay={bestDay}\n              bestTime={bestTime}\n            />\n            {ranks.bestCadence.name !== ranks.worstCadence.name && (\n              <Cadence\n                best={ranks.bestCadence.name}\n                worst={ranks.worstCadence.name}\n              />\n            )}\n          </Fragment>\n        )}\n      </Paragraph>\n    </div>\n  )\n}\n\nexport default ProfileStatistics;\n\n// {/* {bestEngagementAndMostFollowers && (\n//           <Fragment>\n//             <Text>This is rare. But, </Text>\n//             <Text strong>{`${ranks.bestOverallEngagement.name} `}</Text>\n//             <Text> is the most popular and has the best engagement.</Text>\n//             <Text> You can't win much more. </Text>\n//             <WorstRoast name={ranks.worstOverallEngagement.name} />\n//             {ranks.bestCadence.name !== ranks.worstCadence.name && (\n//               <Cadence\n//                 best={ranks.bestCadence.name}\n//                 worst={ranks.worstCadence.name}\n//               />\n//             )}\n//             <BestDayAndTime\n//               bestDay={bestDay}\n//               bestTime={bestTime}\n//             />\n//           </Fragment>\n//         )} */}","import React, { Fragment, useState } from 'react';\nimport { compose } from 'recompose';\nimport { Button, Icon, Switch, Typography } from 'antd';\nimport { withFilter } from '../Filters/withFilter';\nimport { withProfileInsights } from './withProfileInsights';\nimport {\n  FilterContainer,\n  FilterWrapper,\n  SortCheckbox,\n  SportAndRegionFilters\n} from \"../Filters/Filters\";\nimport Table from './Table';\nimport ProfileStatistics from './ProfileStatistics';\nimport InsightsContainer from '../Utilities/InsightsContainer';\nimport { Mixpanel } from '../Mixpanel';\n\nconst { Title } = Typography;\n\nconst ProfileInsights = (props) => {\n  const [usePicture, setUsePicture] = useState(false);\n  const { data, mixpanelInfo } = props;\n\n  return (\n    <Fragment>\n      <FilterContainer>\n        <FilterWrapper title=\"Reset\">\n          <Button onClick={props.resetAllFilters}>\n            <Icon type=\"undo\" />\n          </Button>\n        </FilterWrapper>\n        <FilterWrapper title=\"Filter\">\n          <SortCheckbox\n            options={props.checkboxOptions}\n            handleCheckboxFilter={props.handleCheckboxFilter}\n            checkboxFilters={props.checkboxFilters}\n          />\n        </FilterWrapper>\n        <SportAndRegionFilters\n          handleStringFilter={props.handleStringFilter}\n          sportOptions={props.sportOptions}\n          regionOptions={props.regionOptions}\n        />\n      </FilterContainer>\n      <InsightsContainer>\n        <ProfileStatistics data={data} ranks={props.ranks} />\n      </InsightsContainer>\n      <Title\n        style={{ textAlign: \"center\", paddingTop: \"20px\", marginBottom: 0 }}\n      >\n        Profile Rankings\n      </Title>\n      <div style={{ paddingLeft: \"16px\", paddingBottom: \"8px\" }}>\n        <Typography.Paragraph\n          strong\n          style={{ marginBottom: \"4px\", fontSize: \"14px\" }}\n        >\n          Avatar\n        </Typography.Paragraph>\n        <Switch\n          checked={usePicture}\n          onChange={() => {\n            setUsePicture(!usePicture);\n            Mixpanel.track(\n              `Avatar Toggle: ${mixpanelInfo.groupName} - ${!usePicture}`\n            );\n          }}\n        />\n      </div>\n      <Table usePicture={usePicture} posts={data} />\n    </Fragment>\n  );\n}\n\nexport default compose(\n  withFilter,\n  withProfileInsights\n)(ProfileInsights)\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Button } from 'antd'\n\nconst ForOhFor = () => {\n  return (  \n    <div style={{ \n      textAlign: 'center'\n    }}>\n      <Typography.Title\n        type=\"danger\"\n        level={4}\n        style={{ paddingTop: '16px' }}\n      >\n        404\n      </Typography.Title>\n      <Link to=\"/\">\n        <Button\n          type=\"primary\"\n        >\n          Go Home\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nexport default ForOhFor\n","import React, { Fragment } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Header from '../Header/Header';\nimport PostInsights from '../PostInsights';\nimport PostTrends from '../PostTrends';\nimport ProfileTrends from '../ProfileTrends';\nimport ProfileInsights from '../ProfileInsights';\nimport FourOhFour from '../Utilities/404';\n\nimport { getFlatDataOneKey } from '../../cleaners/init'\n\nimport './Presentation.css';\n\nconst Presentation = ({ \n  pageInfo, \n  sportOptions,\n  regionOptions,\n  match,\n  location,\n  history\n}) => {\n\n  if (!pageInfo || !pageInfo.file) {\n    throw new Error('Nope')\n  }\n\n  const data = require(`../../data/${pageInfo.file}`);\n  const raw = getFlatDataOneKey(data, pageInfo.key);\n  const dateLabels = data.dateLabels;\n\n  // this is kinda ghetto...\n  const tabLabel = location.pathname.split('/')[2];\n  const onTabIndex = (tab) => history.push(`${match.path}/${tab}`);\n\n  const mixpanelInfo = {\n    groupName: pageInfo.key,\n    pageName: tabLabel,\n  }\n\n  return (\n    <Fragment>\n      <Header\n        title={`${pageInfo.display}`}\n        onTabToggle={(idx) => onTabIndex(idx)}\n        tabLabel={tabLabel}\n      />\n\n      <Switch>\n\n        <Route exact path={`${match.url}/`}>\n          <Redirect to={`${match.url}/profileInsight`} />\n        </Route>\n\n        <Route\n          path={`${match.url}/profileInsight`} \n          render={() => {\n            return (\n              <ProfileInsights\n                raw={raw}\n                sportOptions={sportOptions}\n                regionOptions={regionOptions}\n                mixpanelInfo={mixpanelInfo}\n              />\n            )\n        }}/>\n\n        <Route path={`${match.url}/postInsight`} render={() => {\n          return (\n            <PostInsights\n              raw={raw}\n              dateLabels={dateLabels}\n              mixpanelInfo={mixpanelInfo}\n            />\n          )\n        }} />\n\n        <Route path={`${match.url}/postTrend`} render={() => {\n          return (\n            <PostTrends\n              raw={raw}\n              dateLabels={dateLabels}\n              sportOptions={sportOptions}\n              regionOptions={regionOptions}\n              mixpanelInfo={mixpanelInfo}\n            />\n          )\n        }} />\n\n        <Route path={`${match.url}/profileTrend`} render={() => {\n          return (\n            <ProfileTrends\n              raw={raw}\n              sportOptions={sportOptions}\n              regionOptions={regionOptions}\n              mixpanelInfo={mixpanelInfo}\n            />\n          )\n        }} />\n\n        <Route component={FourOhFour} />\n      </Switch>\n\n    </Fragment>\n  )\n}\n\nexport default withRouter(Presentation);","import React, { Fragment } from 'react';\nimport { Typography, Layout } from 'antd';\nimport { Mixpanel } from '../Mixpanel';\n\nimport './Home.css';\n\nconst { Content } = Layout;\n\nconst paraStyle = {\n  lineHeight: 1.8,\n  textAlign: 'center',\n  maxWidth: '400px',\n}\n\nconst Home = ({ FourOhFour }) => {\n  return (\n    <Content \n      style={{\n        padding: '0 24px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: 320,\n      }}>\n      <Typography.Title>\n        K0mb.\n      </Typography.Title>\n      { FourOhFour && (\n        <Typography.Paragraph style={paraStyle}>\n          There used to be good information here. It's gone.\n          <ContactUs />\n          for fresh info\n        </Typography.Paragraph>\n      )}\n      { !FourOhFour && (\n        <Typography.Paragraph style={paraStyle}>\n          <ContactUs />\n          , for custom groups, faster loading, various exports,\n          consistent data, unique filters, private pages and more.\n      </Typography.Paragraph>\n      )}\n    </Content>\n  )\n}\n\nconst ContactUs = () => (\n  <Fragment>\n    <span> </span>\n    <ContactUsLink />\n    <span>, </span>\n    <ContactUsHover />\n    <span> </span>\n  </Fragment>\n)\n\nconst ContactUsLink = () => (\n  <a\n    onClick={() => Mixpanel.track(\"Contact Email Link Clicked\")}\n    href=\"mailto: team.k0mb@gmail.com\"\n  >\n    Contact us\n  </a>\n)\n\nconst ContactUsHover = () => (\n  <span\n    onClick={() => Mixpanel.track(\"Contact Email Copied\")}\n    className=\"email-span\"\n  >\n    team.k0mb@gmail.com\n  </span>\n)\n\nexport default Home","import React from 'react';\nimport { Menu, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport { Mixpanel } from '../Mixpanel';\n\nconst Nav = ({ navOptions }) => {\n  return (\n    <Menu \n      mode=\"horizontal\"\n      style={{ textAlign: 'center' }}\n    >\n      <Menu.Item>\n        <Link to={\"/contact\"}>\n          <Icon type=\"home\" />\n        </Link>\n      </Menu.Item>\n\n      {navOptions.map(opt => {\n        return (\n          <Menu.Item\n            key={`${Date.now()}-${opt.key}`}\n            onClick={() => {\n              Mixpanel.track(`Nav Click: ${opt.display}`, {\n                pageName: 'nav',\n                profile: opt.display\n              })\n            }}\n          >\n            <Link to={opt.url}>{opt.display}</Link>\n          </Menu.Item>\n        )\n      })}\n    </Menu>\n  )\n}\n\nexport default Nav\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Presentation from \"../Presentation/Presentation\";\nimport Home from \"../Home/Home\";\nimport Nav from \"../Nav/Nav\";\nimport FourOhFour from \"../Utilities/404\";\n\n// const regionOptions = [\n//   { value: null, display: 'All' },\n//   { value: 'usa', display: 'USA' },\n//   { value: 'canada', display: 'Canada' },\n//   { value: 'europe', display: 'Europe' },\n//   { value: 'oceania', display: 'Oceania' },\n// ]\n\nconst resortRegionOptions = [\n  { value: null, display: \"All\" },\n  { value: \"global\", display: \"North America\" },\n  { value: \"co\", display: \"Colorado\" },\n  { value: \"canada\", display: \"Canada\" },\n  { value: \"cali\", display: \"California\" },\n  { value: \"ut\", display: \"Utah\" },\n  { value: \"pnw\", display: \"PNW\" },\n  { value: \"east\", display: \"East Coast\" },\n];\n\nconst skiBoardOptions = [\n  { value: null, display: \"All\" },\n  { value: \"ski\", display: \"Ski\" },\n  { value: \"snowboard\", display: \"Snowboard\" },\n  { value: \"both\", display: \"Both\" },\n];\n\n// const celebOptions = [\n//   { value: null, display: \"All\" },\n//   { value: \"bike\", display: \"Bike\" },\n//   { value: \"climb\", display: \"Climb\" },\n//   { value: \"moto\", display: \"Moto\" },\n//   { value: \"skate\", display: \"Skate\" },\n//   { value: \"ski\", display: \"Ski\" },\n//   { value: \"snowboard\", display: \"Snowboard\" },\n// ];\n\nconst map = {\n  boards: {\n    file: \"boards.json\",\n    url: \"/boards\",\n    key: \"boards\",\n    display: \"Boards\",\n    region: null,\n    sport: null,\n  },\n  boarders: {\n    file: \"boarders.json\",\n    url: \"/boarders\",\n    key: \"boarders\",\n    display: \"Boarders\",\n    region: null,\n    sport: null,\n  },\n  // celeb: {\n  //   file: 'celeb.json',\n  //   url: '/celeb',\n  //   key: 'celeb',\n  //   display: 'Celeb',\n  //   region: null,\n  //   sport: celebOptions,\n  // },\n  influencers: {\n    file: \"influencers.json\",\n    url: \"/influencers\",\n    key: \"influencers\",\n    display: \"Outdoor Influencers\",\n    region: null,\n    sport: null,\n  },\n  media: {\n    file: \"media.json\",\n    url: \"/media\",\n    key: \"media\",\n    display: \"Media\",\n    region: null,\n    sport: skiBoardOptions,\n  },\n  resorts: {\n    file: \"resorts.json\",\n    url: \"/resorts\",\n    key: \"resorts\",\n    display: \"Resorts\",\n    region: resortRegionOptions,\n    sport: null,\n  },\n  skis: {\n    file: \"skis.json\",\n    url: \"/skis\",\n    key: \"skis\",\n    display: \"Skis\",\n    region: null,\n    sport: null,\n  },\n  softgoods: {\n    file: \"softgoods.json\",\n    url: \"/softgoods\",\n    key: \"softgoods\",\n    display: \"Softgoods\",\n    region: null,\n    sport: skiBoardOptions,\n  },\n  skiers: {\n    file: \"skiers.json\",\n    url: \"/skiers\",\n    key: \"skiers\",\n    display: \"Skiers\",\n    region: null,\n    sport: null,\n  },\n};\n\nconst brandArray = Object.keys(map).map((key) => map[key]);\n\nconst AppRouter = (props) => {\n  // const mixpanelID = Mixpanel.getDistinctId();\n  return (\n    <div>\n      <Nav navOptions={brandArray} />\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/resorts\" />\n          </Route>\n\n          {brandArray &&\n            brandArray.map((brand) => {\n              return (\n                <Route key={`${brand.key}-${Date.now()}`} path={`${brand.url}`}>\n                  <Presentation\n                    pageInfo={brand}\n                    regionOptions={brand.region && brand.region}\n                    sportOptions={brand.sport && brand.sport}\n                  />\n                </Route>\n              );\n            })}\n          {/* Existing route 404 */}\n          {/* <Route path=\"/skiers\" render={() => {\n            return (\n              <Home FourOhFour />\n            )\n          }}/> */}\n          <Route path=\"/contact\" component={Home} />\n          <Route component={FourOhFour} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize('UA-33672229-3');\n\nexport const withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    ReactGA.set({\n      page,\n      ...options\n    });\n    ReactGA.pageview(page);\n  };\n\n  const ProdHOC = props => {\n    useEffect(() => trackPage(props.location.pathname), [\n      props.location.pathname\n    ]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  const DevHOC = props => {\n    return <WrappedComponent {...props} />;\n  };\n\n  return process.env.NODE_ENV === 'production' ? ProdHOC : DevHOC;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { withTracker } from './components/withTracker'\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename=\"/k0mb\">\n    <Route component={withTracker(App, {})} />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}